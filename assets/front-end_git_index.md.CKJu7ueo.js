import{_ as s,G as a,E as n,ao as l}from"./chunks/framework.C1rSk1pR.js";const B=JSON.parse('{"title":"git","description":"","frontmatter":{"title":"git","desc":"《JavaScript设计模式》、《大话设计模式》笔记","keywords":"设计模式、笔记","date":"2020-02-17T01:01:00.000Z","cover":"https://cdn.jsdelivr.net/gh/chengpeiquan/assets-storage/img/2020/02/1.jpg"},"headers":[],"relativePath":"front-end/git/index.md","filePath":"front-end/git/index.md","lastUpdated":1737179313000}'),o={name:"front-end/git/index.md"},t=l(`<h1 id="git" tabindex="-1">git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;git&quot;">​</a></h1><h2 id="本地操作" tabindex="-1">本地操作 <a class="header-anchor" href="#本地操作" aria-label="Permalink to &quot;本地操作&quot;">​</a></h2><ol><li>配置</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki solarized-dark vp-code" tabindex="0"><code><span class="line"><span>git config --global user.name 你的英文名</span></span>
<span class="line"><span>git config --global user.email 你的邮箱</span></span>
<span class="line"><span>git config --global push.default simple</span></span>
<span class="line"><span>git config --global core.quotepath false</span></span>
<span class="line"><span>git config --global core.editor &quot;code --wait&quot;</span></span>
<span class="line"><span>git config --global core.autocrlf input</span></span></code></pre></div><ol start="2"><li>常用操作</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> init</span><span style="color:#586E75;font-style:italic;"> //初始化git本地仓库</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> add</span><span style="color:#268BD2;"> xxx</span><span style="color:#839496;">.</span><span style="color:#268BD2;">xxx</span><span style="color:#586E75;font-style:italic;">  //指定将要提交的文件</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> add</span><span style="color:#839496;"> .  </span><span style="color:#586E75;font-style:italic;">//提交全部文件，可以创建一个.gitIgnore写入不想提交的文件和文件夹</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> commit</span><span style="color:#859900;"> -</span><span style="color:#268BD2;">m</span><span style="color:#2AA198;"> &#39;提交理由&#39;</span><span style="color:#586E75;font-style:italic;">  // 没有空格不加引号也可，参数-v可以用vscode提交，可以顺便查看修改的具体代码</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> status</span><span style="color:#586E75;font-style:italic;"> //查看文件变动</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> log</span><span style="color:#586E75;font-style:italic;"> //查看历史提交，需要倒着看</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> reset</span><span style="color:#859900;"> --</span><span style="color:#268BD2;">hard</span><span style="color:#839496;"> 提交号前六位  </span><span style="color:#586E75;font-style:italic;">//跳版本！！</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> reset</span><span style="color:#859900;"> --</span><span style="color:#268BD2;">hard</span><span style="color:#268BD2;"> HEAD</span><span style="color:#859900;">^</span><span style="color:#586E75;font-style:italic;"> //跳到上一个版本，HEAD^^跳到上上个版本</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> reflog</span><span style="color:#586E75;font-style:italic;"> //查看包括跳版本的所有历史记录</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> checkout</span><span style="color:#859900;"> --</span><span style="color:#268BD2;"> xxx</span><span style="color:#839496;">.</span><span style="color:#268BD2;">xxx</span><span style="color:#586E75;font-style:italic;"> //恢复到最近的一次commit或者git add的状态</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> cherry</span><span style="color:#859900;">-</span><span style="color:#268BD2;">pick</span><span style="color:#839496;"> 提交号1 提交号2 </span><span style="color:#859900;">...</span><span style="color:#586E75;font-style:italic;"> // 复制选中的提交号到当前分支</span></span></code></pre></div><ol start="3"><li>分支操作</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> branch</span><span style="color:#268BD2;"> x</span><span style="color:#586E75;font-style:italic;">  //创建分支，是基于本地仓库的最新一次commit，创建一个新提交</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> checkout</span><span style="color:#268BD2;"> x</span><span style="color:#586E75;font-style:italic;">  //切换分支</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> checkout</span><span style="color:#859900;"> -</span><span style="color:#268BD2;">b</span><span style="color:#268BD2;"> x</span><span style="color:#586E75;font-style:italic;"> //创建分支并切换</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> checkout</span><span style="color:#268BD2;"> master</span><span style="color:#586E75;font-style:italic;">  //切换到主分支</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> branch</span><span style="color:#586E75;font-style:italic;"> //查看当前分支</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> merge</span><span style="color:#268BD2;"> x</span><span style="color:#586E75;font-style:italic;"> //合并分支，需要先到达主分支</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> branch</span><span style="color:#859900;"> -</span><span style="color:#268BD2;">d</span><span style="color:#268BD2;"> x</span><span style="color:#586E75;font-style:italic;">  //删除分支</span></span></code></pre></div><h2 id="远程仓库" tabindex="-1">远程仓库 <a class="header-anchor" href="#远程仓库" aria-label="Permalink to &quot;远程仓库&quot;">​</a></h2><ol><li>提交到 github <ol><li>创建 github 仓库，复制 ssh 地址</li><li>在本地添加远程仓库地址<code>git remote add orign git@xxx</code></li><li>推送本地 master 分支到远程 origin 的 master 分支<code>git push -u origin master</code>(提交过一次后，之后可以直接 git push , origin 是可以自己命名的)</li></ol></li><li>下载代码到本地 <code>git clone git@xxx</code></li></ol><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> rebase</span><span style="color:#586E75;font-style:italic;">  // 合并提交历史</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> stash</span><span style="color:#586E75;font-style:italic;"> //代码写了一半不想提交，可以将add过的文件先暂存起来，得到一个干净的工作区</span></span>
<span class="line"><span style="color:#268BD2;">git</span><span style="color:#268BD2;"> stash</span><span style="color:#268BD2;"> pop</span><span style="color:#586E75;font-style:italic;"> //显示暂存的文件</span></span></code></pre></div>`,12),p=[t];function e(c,i,r,y,d,g){return n(),a("div",null,p)}const h=s(o,[["render",e]]);export{B as __pageData,h as default};
