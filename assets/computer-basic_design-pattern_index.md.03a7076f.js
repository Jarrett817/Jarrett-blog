import{_ as s,c as n,o as a,Q as l}from"./chunks/framework.7454da9a.js";const p="/Jarrett-blog/assets/car-engine.08bd5514.png",B=JSON.parse('{"title":"设计模式","description":"","frontmatter":{"title":"设计模式","desc":"《JavaScript设计模式》、《大话设计模式》笔记","keywords":"设计模式、笔记","date":"2020-02-17T01:01:00.000Z","cover":"https://cdn.jsdelivr.net/gh/chengpeiquan/assets-storage/img/2020/02/1.jpg"},"headers":[],"relativePath":"computer-basic/design-pattern/index.md","filePath":"computer-basic/design-pattern/index.md","lastUpdated":1712038029000}'),o={name:"computer-basic/design-pattern/index.md"},e=l(`<h1 id="设计模式" tabindex="-1">设计模式 <a class="header-anchor" href="#设计模式" aria-label="Permalink to &quot;设计模式&quot;">​</a></h1><h2 id="设计模式的利与弊" tabindex="-1">设计模式的利与弊 <a class="header-anchor" href="#设计模式的利与弊" aria-label="Permalink to &quot;设计模式的利与弊&quot;">​</a></h2><p>js 的设计模式有工厂模式、桥接模式、组合模式、门面模式、适配器模式装饰者模式、享元模式、代理模式、观察者模式、命令模式、职责链模式</p><h3 id="利" tabindex="-1">利 <a class="header-anchor" href="#利" aria-label="Permalink to &quot;利&quot;">​</a></h3><ul><li>可维护性。降低模块耦合程度，利于重构、合作和维护</li><li>沟通。对程序员来说，是一套通用的术语</li><li>性能。某些起优化作用的设计模式。可以大幅度提高程序的运行速度，减少需要传送到客户端的代码量。如享元模式和代理模式</li></ul><h3 id="弊" tabindex="-1">弊 <a class="header-anchor" href="#弊" aria-label="Permalink to &quot;弊&quot;">​</a></h3><ul><li>复杂性。这是获得可维护性付出的代价，带啊吗会变得更复杂</li><li>性能。某些模式能提升性能，但多数模式对性能有所拖累，尽管可能是微不足道的，取决于项目的具体需求</li></ul><h3 id="不要盲目使用设计模式" tabindex="-1">不要盲目使用设计模式 <a class="header-anchor" href="#不要盲目使用设计模式" aria-label="Permalink to &quot;不要盲目使用设计模式&quot;">​</a></h3><p>要保证所选用的模式是最恰当的那一种，不要过度牺牲性能</p><h2 id="设计模式的原则" tabindex="-1">设计模式的原则 <a class="header-anchor" href="#设计模式的原则" aria-label="Permalink to &quot;设计模式的原则&quot;">​</a></h2><h3 id="单一职责原则" tabindex="-1">单一职责原则 <a class="header-anchor" href="#单一职责原则" aria-label="Permalink to &quot;单一职责原则&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>SRP，就一个类而言，应该仅有一个引起它变化的原因， 如果一个类承担的职责过多，就等于把这些职责耦合在一起，一个职责的变化可能会削弱或者抑制这个类完成其他职责的能力，这种耦合会导致脆弱的设计，当变化发生时，设计会遭受到意想不到的破坏</p></div><p>所以我们在写代码过程中需要有意识地去分离代码，比如样式和逻辑分离</p><h3 id="开放-封闭原则" tabindex="-1">开放-封闭原则 <a class="header-anchor" href="#开放-封闭原则" aria-label="Permalink to &quot;开放-封闭原则&quot;">​</a></h3><p>软件实体应该可以扩展，但是不可以修改</p><p>无论模块是多么的封闭，都会存在一些无法对之封闭的变化。既然不可能完全封闭，设计人员必须对于他设计的模块应该对哪种变化封闭做出选择。他必须先猜测出最可能发生的变化种类，然后构造抽象来隔离那些变化</p><p>面对需求，对程序的改动是通过增加信贷吗进行的，而不是更改现有的代码</p><h3 id="依赖倒转原则" tabindex="-1">依赖倒转原则 <a class="header-anchor" href="#依赖倒转原则" aria-label="Permalink to &quot;依赖倒转原则&quot;">​</a></h3><p>A. 高层模块不应该依赖低层模块。两个都应该依赖抽象 B. 抽象不应该依赖细节。细节应该依赖抽象</p><p>比如电脑的主板坏了，如果导致 cpu、内存都坏了，就不合理。同样的，cpu 坏了，导致内存、主板坏了也不合理</p><h3 id="里氏代换原则" tabindex="-1">里氏代换原则 <a class="header-anchor" href="#里氏代换原则" aria-label="Permalink to &quot;里氏代换原则&quot;">​</a></h3><p>一个软件实体如果使用的是一个父类的话，那么一定适用其子类，而且它察觉不出父类和子类对象的区别。就是说，在软件里面，把父类都替换成它的子类，程序的行为没有变化简单说，子类型必须能够替换掉他们的父类型。</p><p>正是由于子类型的可替换性才使得使用父类类型的模块在无需修改的情况下就可以扩展</p><h2 id="常用的设计模式" tabindex="-1">常用的设计模式 <a class="header-anchor" href="#常用的设计模式" aria-label="Permalink to &quot;常用的设计模式&quot;">​</a></h2><h3 id="接口" tabindex="-1">接口 <a class="header-anchor" href="#接口" aria-label="Permalink to &quot;接口&quot;">​</a></h3><p>接口规定某个对象必须有哪些方法，但不规定方法的具体实现 利</p><ul><li>自我描述性</li></ul><p>弊：</p><ul><li>js 没有内置接口，这在一定程度上降低了语言的灵活性</li></ul><h3 id="闭包" tabindex="-1">闭包 <a class="header-anchor" href="#闭包" aria-label="Permalink to &quot;闭包&quot;">​</a></h3><p>其实就是为了解决曾经 js 没有 let 和 const 时的问题。js 只有函数具有作用域，在函数外部用 var 声明的都是全局变量 ​</p><p>有个弊端就是直接在 prototype 原型上声明函数，函数会被原型链重复利用，内存中只有一份。但是如果使用闭包的方式需要每次生成新的函数的副本，会耗费更多的内存 并且这种创建模式不利于派生子类，因为派生出的子类不能访问超类的所有私有属性和方法，这被称为继承破坏封装</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Book</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (newName) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">name</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">getName</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">name</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  };</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">setName</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (_name) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">name</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">_name</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  };</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">setName</span><span style="color:#839496;">(</span><span style="color:#268BD2;">newName</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859900;">Book</span><span style="color:#839496;">.prototype </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">getProtoName</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">book</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Book</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;xxxx&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">book</span><span style="color:#839496;">.</span><span style="color:#268BD2;">getName</span><span style="color:#839496;">());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>不需要访问私有属性的方法直接在 prototype 中声明，需要访问私有属性的特权方法才需要挂在 this 上。 一般使用直接返回函数就可以了</p><h3 id="继承" tabindex="-1">继承 <a class="header-anchor" href="#继承" aria-label="Permalink to &quot;继承&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 有这么一个Person类</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Person</span><span style="color:#839496;">(name) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">name</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859900;">Person</span><span style="color:#839496;">.prototype.</span><span style="color:#268BD2;">getName</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="类式继承" tabindex="-1">类式继承 <a class="header-anchor" href="#类式继承" aria-label="Permalink to &quot;类式继承&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 使用的时候通过new</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">reader</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Person</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;xxx&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// reader就可以使用Person的getName方法</span></span>
<span class="line"><span style="color:#268BD2;">reader</span><span style="color:#839496;">.</span><span style="color:#268BD2;">getName</span><span style="color:#839496;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="原型链继承" tabindex="-1">原型链继承 <a class="header-anchor" href="#原型链继承" aria-label="Permalink to &quot;原型链继承&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Author</span><span style="color:#839496;">(name, books) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">Person</span><span style="color:#839496;">.</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">, </span><span style="color:#268BD2;">name</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">books</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">books</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 原型挂成Person，但是构造器方法要用自己的</span></span>
<span class="line"><span style="color:#859900;">Author</span><span style="color:#839496;">.prototype </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Person</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#859900;">Author</span><span style="color:#839496;">.prototype.constructor </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Author</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#859900;">Author</span><span style="color:#839496;">.prototype.</span><span style="color:#268BD2;">getBooks</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">books</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="策略模式" tabindex="-1">策略模式 <a class="header-anchor" href="#策略模式" aria-label="Permalink to &quot;策略模式&quot;">​</a></h3><p>定义了算法家族，分别分装起来，让他们之间可以互相替换，此模式让算法的变化，不会影响到使用算法的客户</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">abstract</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Strategy</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">abstract</span><span style="color:#839496;"> </span><span style="color:#268BD2;">AlogorithmInterface</span><span style="color:#839496;">()</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">void</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">ConcreteStrategyA</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">Strategy</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">AlogorithmInterface</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">consol</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;A算法&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">ConcreteStrategyB</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">Strategy</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">AlogorithmInterface</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;B算法&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Context</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(strategy) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">strategy</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">strategy</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">ContextInterface</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">strategy</span><span style="color:#839496;">.</span><span style="color:#268BD2;">AlogorithmInterface</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 使用</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">context</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Context</span><span style="color:#839496;">(</span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">ConcreteStrategyA</span><span style="color:#839496;">());</span></span>
<span class="line"><span style="color:#268BD2;">context</span><span style="color:#839496;">.</span><span style="color:#268BD2;">ContextInterface</span><span style="color:#839496;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>其实就是封装多个不同功能的函数，用条件语句去匹配对应的策略，为了避免客户端需要写条件，可以结合简单工厂，将条件匹配放到工厂内</p><h3 id="观察者模式" tabindex="-1">观察者模式 <a class="header-anchor" href="#观察者模式" aria-label="Permalink to &quot;观察者模式&quot;">​</a></h3><p>又名发布订阅模式 最常见的观察者模式的用途是 dom 的事件监听</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">//使用事件监听器addEventListener</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">el</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">document</span><span style="color:#839496;">.</span><span style="color:#268BD2;">querySlector</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;#id&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fn1</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (e) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">//handle click</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fn2</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (e) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">//handle click</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#268BD2;">el</span><span style="color:#839496;">.</span><span style="color:#268BD2;">addEventListener</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;click&#39;</span><span style="color:#839496;">, </span><span style="color:#268BD2;">fn1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">el</span><span style="color:#839496;">.</span><span style="color:#268BD2;">addEventListener</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;click&#39;</span><span style="color:#839496;">, </span><span style="color:#268BD2;">fn2</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">//使用事件处理器</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">el</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">document</span><span style="color:#839496;">.</span><span style="color:#268BD2;">querySlector</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;#id&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fn1</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (e) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">//handle click</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fn2</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (e) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">//handle click</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#268BD2;">el</span><span style="color:#839496;">.</span><span style="color:#268BD2;">onClick</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fn1</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#268BD2;">el</span><span style="color:#839496;">.</span><span style="color:#268BD2;">onClick</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fn2</span><span style="color:#839496;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="常见实现" tabindex="-1">常见实现 <a class="header-anchor" href="#常见实现" aria-label="Permalink to &quot;常见实现&quot;">​</a></h4><p>有很多实现方式，可以根据业务场景做变换，可以是由发布者来决定订阅者的订阅与否，也可以是订阅者自己决定订阅与否，还可以是订阅者直接从发布者那里主动拉取数据，并且网络上很多言论已经将观察者模式和发布订阅分开来，观察者模式加上一个事件调度中心即是发布订阅模式。以下是观察者模式常见实现</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Publisher</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">subscribers</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [];</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">addSubscriber</span><span style="color:#839496;">(subscriber) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">observers</span><span style="color:#839496;">.</span><span style="color:#268BD2;">push</span><span style="color:#839496;">(</span><span style="color:#268BD2;">observer</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">removeSubscriber</span><span style="color:#839496;">(subscriber) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">index</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">subscribers</span><span style="color:#839496;">.</span><span style="color:#268BD2;">indexOf</span><span style="color:#839496;">(</span><span style="color:#268BD2;">subscriber</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">index</span><span style="color:#839496;"> </span><span style="color:#859900;">&gt;</span><span style="color:#839496;"> </span><span style="color:#859900;">-</span><span style="color:#D33682;">1</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">subscribers</span><span style="color:#839496;">.</span><span style="color:#268BD2;">splice</span><span style="color:#839496;">(</span><span style="color:#268BD2;">index</span><span style="color:#839496;">, </span><span style="color:#D33682;">1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">notify</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">subscribers</span><span style="color:#839496;">.</span><span style="color:#268BD2;">forEach</span><span style="color:#839496;">(subscriber </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">subscriber</span><span style="color:#839496;">.</span><span style="color:#268BD2;">update</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    });</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Subscriber</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">update</span><span style="color:#839496;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">subscribeTo</span><span style="color:#839496;">(publisher) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">publisher</span><span style="color:#839496;">.</span><span style="color:#268BD2;">addSubscriber</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">publisher</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Publisher</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">subscriber1</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Subscriber</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">subscriber2</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Subscriber</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">subscriber3</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Subscriber</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#268BD2;">subscriber1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">update</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;1 update&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#268BD2;">subscriber2</span><span style="color:#839496;">.</span><span style="color:#268BD2;">update</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;2 update&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#268BD2;">subscriber3</span><span style="color:#839496;">.</span><span style="color:#268BD2;">update</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;3 update&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">//测试</span></span>
<span class="line"><span style="color:#268BD2;">subscriber1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">subscribeTo</span><span style="color:#839496;">(</span><span style="color:#268BD2;">publisher</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">subscriber2</span><span style="color:#839496;">.</span><span style="color:#268BD2;">subscribeTo</span><span style="color:#839496;">(</span><span style="color:#268BD2;">publisher</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">subscriber3</span><span style="color:#839496;">.</span><span style="color:#268BD2;">subscribeTo</span><span style="color:#839496;">(</span><span style="color:#268BD2;">publisher</span><span style="color:#839496;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><p>发布/订阅模式实现，观察者模式是一对多，发布订阅模式是一对一对多（发布者不与观察者直接接触)</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">//订阅者</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Subscriber</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">update</span><span style="color:#839496;">() {}</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">//update(event){}</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">subscribeTo</span><span style="color:#839496;">(channel) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">channel</span><span style="color:#839496;">.</span><span style="color:#268BD2;">addSubscriber</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">//中间通道</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Channel</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">subscribers</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [];</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">addSubscriber</span><span style="color:#839496;">(subscriber) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">subscribers</span><span style="color:#839496;">.</span><span style="color:#268BD2;">push</span><span style="color:#839496;">(</span><span style="color:#268BD2;">subscriber</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">removeSubscriber</span><span style="color:#839496;">(subscriber) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">index</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">observers</span><span style="color:#839496;">.</span><span style="color:#268BD2;">indexOf</span><span style="color:#839496;">(</span><span style="color:#268BD2;">subscriber</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">index</span><span style="color:#839496;"> </span><span style="color:#859900;">&gt;</span><span style="color:#839496;"> </span><span style="color:#859900;">-</span><span style="color:#D33682;">1</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">subscribers</span><span style="color:#839496;">.</span><span style="color:#268BD2;">splice</span><span style="color:#839496;">(</span><span style="color:#268BD2;">index</span><span style="color:#839496;">, </span><span style="color:#D33682;">1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">publish</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">//publish(event){</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">subscribers</span><span style="color:#839496;">.</span><span style="color:#268BD2;">forEach</span><span style="color:#839496;">(subscriber </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">subscriber</span><span style="color:#839496;">.</span><span style="color:#268BD2;">update</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#586E75;font-style:italic;">//subscriber.update(event)</span></span>
<span class="line"><span style="color:#839496;">    });</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">//发布者</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Publisher</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">notify</span><span style="color:#839496;">(channel) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">channel</span><span style="color:#839496;">.</span><span style="color:#268BD2;">publish</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">//channel.publish(event)</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">//测试，new一个中间通道对象、发布者对象和三个订阅者对象</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">channel</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Channel</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">publisher</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Publisher</span><span style="color:#839496;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">subscriber1</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Subscriber</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">subscriber2</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Subscriber</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">subscriber3</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Subscriber</span><span style="color:#839496;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">subscriber1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">update</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;1 update&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#268BD2;">subscriber2</span><span style="color:#839496;">.</span><span style="color:#268BD2;">update</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;2 update&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#268BD2;">subscriber3</span><span style="color:#839496;">.</span><span style="color:#268BD2;">update</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;3 update&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">//订阅者向中间通道订阅</span></span>
<span class="line"><span style="color:#268BD2;">subscriber1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">subscribeTo</span><span style="color:#839496;">(</span><span style="color:#268BD2;">channel</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">subscriber2</span><span style="color:#839496;">.</span><span style="color:#268BD2;">subscribeTo</span><span style="color:#839496;">(</span><span style="color:#268BD2;">channel</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">subscriber3</span><span style="color:#839496;">.</span><span style="color:#268BD2;">subscribeTo</span><span style="color:#839496;">(</span><span style="color:#268BD2;">channel</span><span style="color:#839496;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">//发布者只向中间通道发布事件</span></span>
<span class="line"><span style="color:#268BD2;">publisher</span><span style="color:#839496;">.</span><span style="color:#268BD2;">notify</span><span style="color:#839496;">(</span><span style="color:#268BD2;">channel</span><span style="color:#839496;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br></div></div><h5 id="利-1" tabindex="-1">利 <a class="header-anchor" href="#利-1" aria-label="Permalink to &quot;利&quot;">​</a></h5><p>比如注册一个事件监听器。借助一个事件监听器去处理各种行为，将信息由一个订阅中心发布，就不需要反复的同样的元素添加各自的事件监听器。利于减少系统开销并提高程序的可维护性</p><h5 id="弊-1" tabindex="-1">弊 <a class="header-anchor" href="#弊-1" aria-label="Permalink to &quot;弊&quot;">​</a></h5><p>创建被观察对象带来的加载时间开销可能会较大。可以通过懒加载，把新的被观察对象的实例化推迟到需要发送事件通知的时候。</p><h3 id="建造者模式" tabindex="-1">建造者模式 <a class="header-anchor" href="#建造者模式" aria-label="Permalink to &quot;建造者模式&quot;">​</a></h3><p>讲一个复杂对象的构建与他的表示分离，使得同样的构建过程可以创建不同的表示</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 画一个小人，需要有头、身体、手脚</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">abstract</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">PersonBuilder</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(graph, pen) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">graph</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">graph</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">pen</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">pen</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">abstract</span><span style="color:#839496;"> </span><span style="color:#268BD2;">buildHead</span><span style="color:#839496;">()</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">void</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">abstract</span><span style="color:#839496;"> </span><span style="color:#268BD2;">buildBody</span><span style="color:#839496;">()</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">void</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">abstract</span><span style="color:#839496;"> </span><span style="color:#268BD2;">buildArmLeft</span><span style="color:#839496;">()</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">void</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">abstract</span><span style="color:#839496;"> </span><span style="color:#268BD2;">buildArmRight</span><span style="color:#839496;">()</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">void</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">abstract</span><span style="color:#839496;"> </span><span style="color:#268BD2;">buildLegLeft</span><span style="color:#839496;">()</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">void</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">abstract</span><span style="color:#839496;"> </span><span style="color:#268BD2;">buildLegRight</span><span style="color:#839496;">()</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">void</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 瘦人类</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">PersonThinBuilder</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">PersonBuilder</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(graph, pen) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">super</span><span style="color:#839496;">(</span><span style="color:#268BD2;">graph</span><span style="color:#839496;">, </span><span style="color:#268BD2;">pen</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">buildHead</span><span style="color:#839496;">() {}</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">buildBody</span><span style="color:#839496;">() {}</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">buildArmLeft</span><span style="color:#839496;">() {}</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">buildArmRight</span><span style="color:#839496;">() {}</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">buildLegLeft</span><span style="color:#839496;">() {}</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">buildLegRight</span><span style="color:#839496;">() {}</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 指挥者</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">PersonDirector</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(pb) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 用户需要告诉指挥者要什么样的小人</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">pb</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">pb</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">CreatePerson</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">pb</span><span style="color:#839496;">.</span><span style="color:#268BD2;">buildHead</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">pb</span><span style="color:#839496;">.</span><span style="color:#268BD2;">buildBody</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">pd</span><span style="color:#839496;">.</span><span style="color:#268BD2;">buildArmLeft</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">pd</span><span style="color:#839496;">.</span><span style="color:#268BD2;">buildArmRight</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">pd</span><span style="color:#839496;">.</span><span style="color:#268BD2;">buildLegLeft</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">pd</span><span style="color:#839496;">.</span><span style="color:#268BD2;">buildLegRight</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h3 id="工厂模式" tabindex="-1">工厂模式 <a class="header-anchor" href="#工厂模式" aria-label="Permalink to &quot;工厂模式&quot;">​</a></h3><h4 id="简单工厂-静态工厂" tabindex="-1">简单工厂（静态工厂） <a class="header-anchor" href="#简单工厂-静态工厂" aria-label="Permalink to &quot;简单工厂（静态工厂）&quot;">​</a></h4><p>以自行车商店为例,商店把生产自行车的工作交给一个外部对象</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">//User类</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">User</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">//构造器</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(opt) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">opt</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">viewPage</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">opt</span><span style="color:#839496;">.</span><span style="color:#268BD2;">viewPage</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">//静态方法</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">static</span><span style="color:#839496;"> </span><span style="color:#268BD2;">getInstance</span><span style="color:#839496;">(role) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">switch</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">role</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">case</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;superAdmin&#39;</span><span style="color:#839496;">:</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">User</span><span style="color:#839496;">({</span></span>
<span class="line"><span style="color:#839496;">          name: </span><span style="color:#2AA198;">&#39;超级管理员&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">          viewPage: [</span><span style="color:#2AA198;">&#39;首页&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;通讯录&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;发现页&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;应用数据&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;权限管理&#39;</span><span style="color:#839496;">],</span></span>
<span class="line"><span style="color:#839496;">        });</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">break</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">case</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;admin&#39;</span><span style="color:#839496;">:</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">User</span><span style="color:#839496;">({</span></span>
<span class="line"><span style="color:#839496;">          name: </span><span style="color:#2AA198;">&#39;管理员&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">          viewPage: [</span><span style="color:#2AA198;">&#39;首页&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;通讯录&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;发现页&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;应用数据&#39;</span><span style="color:#839496;">],</span></span>
<span class="line"><span style="color:#839496;">        });</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">break</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">case</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;user&#39;</span><span style="color:#839496;">:</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">User</span><span style="color:#839496;">({</span></span>
<span class="line"><span style="color:#839496;">          name: </span><span style="color:#2AA198;">&#39;普通用户&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">          viewPage: [</span><span style="color:#2AA198;">&#39;首页&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;通讯录&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;发现页&#39;</span><span style="color:#839496;">],</span></span>
<span class="line"><span style="color:#839496;">        });</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">break</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">default</span><span style="color:#839496;">:</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">throw</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Error</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;参数错误, 可选参数:superAdmin、admin、user&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">superAdmin</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">User</span><span style="color:#839496;">.</span><span style="color:#268BD2;">getInstance</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;superAdmin&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">admin</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">User</span><span style="color:#839496;">.</span><span style="color:#268BD2;">getInstance</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;admin&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">normalUser</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">User</span><span style="color:#839496;">.</span><span style="color:#268BD2;">getInstance</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;user&#39;</span><span style="color:#839496;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h5 id="利-2" tabindex="-1">利 <a class="header-anchor" href="#利-2" aria-label="Permalink to &quot;利&quot;">​</a></h5><p>对于构建逻辑简单、相同且都是同种类的对象工厂是合适的</p><h5 id="弊-2" tabindex="-1">弊 <a class="header-anchor" href="#弊-2" aria-label="Permalink to &quot;弊&quot;">​</a></h5><p>需要添加新的对象种类时，得去修改源代码。只适用于创建对象数量少、创建逻辑不复杂时使用</p><h4 id="工厂模式-1" tabindex="-1">工厂模式 <a class="header-anchor" href="#工厂模式-1" aria-label="Permalink to &quot;工厂模式&quot;">​</a></h4><p>与简单工厂相比，不是用另一个类来生产对象，而是用一个子类，核心类成了抽象类。 这样添加新的类时就无需修改基础的工厂方法，只需要将子类注册进工厂方法。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">FunctionFactoryBase</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">// 抽象类</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(role) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#859900;">new</span><span style="color:#839496;">.target </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#268BD2;">FunctionFactoryBase</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">throw</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Error</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;抽象类不能实例&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">role</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">role</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">FunctionFactory1</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">FunctionFactoryBase</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">// 子类</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(role) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">super</span><span style="color:#839496;">(</span><span style="color:#268BD2;">role</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">static</span><span style="color:#839496;"> </span><span style="color:#268BD2;">create</span><span style="color:#839496;">(role) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">switch</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">role</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">case</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;admin&#39;</span><span style="color:#839496;">:</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">FunctionFactory1</span><span style="color:#839496;">({</span></span>
<span class="line"><span style="color:#839496;">          role: </span><span style="color:#2AA198;">&#39;管理员&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">          permissions: [</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#2AA198;">&#39;设置&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#2AA198;">&#39;删除&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#2AA198;">&#39;新增&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#2AA198;">&#39;创建&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#2AA198;">&#39;开发&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#2AA198;">&#39;推送&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#2AA198;">&#39;提问&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#2AA198;">&#39;评论&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">          ],</span></span>
<span class="line"><span style="color:#839496;">        });</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">break</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">case</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;developer&#39;</span><span style="color:#839496;">:</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">FunctionFactory1</span><span style="color:#839496;">({</span></span>
<span class="line"><span style="color:#839496;">          role: </span><span style="color:#2AA198;">&#39;开发者&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">          permissions: [</span><span style="color:#2AA198;">&#39;开发&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;推送&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;提问&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;评论&#39;</span><span style="color:#839496;">],</span></span>
<span class="line"><span style="color:#839496;">        });</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">break</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">default</span><span style="color:#839496;">:</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">throw</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Error</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;参数只能为 admin 或 developer&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">show</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> { </span><span style="color:#268BD2;">role</span><span style="color:#839496;">, </span><span style="color:#268BD2;">permissions</span><span style="color:#839496;"> } </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">role</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">str</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">\`是一个\${</span><span style="color:#268BD2;">role</span><span style="color:#2AA198;">}, 权限：\${</span><span style="color:#268BD2;">permissions</span><span style="color:#839496;">.</span><span style="color:#268BD2;">join</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;, &#39;</span><span style="color:#839496;">)</span><span style="color:#2AA198;">}\`</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">str</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">FunctionFactory2</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">FunctionFactoryBase</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">// 子类</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(role) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">super</span><span style="color:#839496;">(</span><span style="color:#268BD2;">role</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">static</span><span style="color:#839496;"> </span><span style="color:#268BD2;">create</span><span style="color:#839496;">(role) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">switch</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">role</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">case</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;user&#39;</span><span style="color:#839496;">:</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">FunctionFactory2</span><span style="color:#839496;">({</span></span>
<span class="line"><span style="color:#839496;">          role: </span><span style="color:#2AA198;">&#39;用户&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">          permissions: [</span><span style="color:#2AA198;">&#39;提问&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;评论&#39;</span><span style="color:#839496;">],</span></span>
<span class="line"><span style="color:#839496;">        });</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">break</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">default</span><span style="color:#839496;">:</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">throw</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Error</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;参数只能为 user&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">show</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> { </span><span style="color:#268BD2;">role</span><span style="color:#839496;">, </span><span style="color:#268BD2;">permissions</span><span style="color:#839496;"> } </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">role</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">str</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">\`是一个\${</span><span style="color:#268BD2;">role</span><span style="color:#2AA198;">}, 权限：\${</span><span style="color:#268BD2;">permissions</span><span style="color:#839496;">.</span><span style="color:#268BD2;">join</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;, &#39;</span><span style="color:#839496;">)</span><span style="color:#2AA198;">}\`</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">str</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// let xl = new FunctionFactoryBase();</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 此行会报错，注释后方可正常执行后面</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">xm</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">FunctionFactory1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">create</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;admin&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">xm</span><span style="color:#839496;">.</span><span style="color:#268BD2;">show</span><span style="color:#839496;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">xh</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">FunctionFactory1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">create</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;developer&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">xh</span><span style="color:#839496;">.</span><span style="color:#268BD2;">show</span><span style="color:#839496;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">user1</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">FunctionFactory2</span><span style="color:#839496;">.</span><span style="color:#268BD2;">create</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;user&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">user1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">show</span><span style="color:#839496;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br></div></div><p>这样一来，添加新类无需修改抽象类工厂内源代码，只需要创建一个新的子类（工厂） 基础工厂里定义的是各子工厂抽象方法，子工厂可具体定义各自的行为</p><p>缺点在于随着工厂种类越来越多，类会越来越多，增加系统复杂度</p><h4 id="抽象工厂模式" tabindex="-1">抽象工厂模式 <a class="header-anchor" href="#抽象工厂模式" aria-label="Permalink to &quot;抽象工厂模式&quot;">​</a></h4><p>工厂模式针对一个产品等级结构、而抽象工厂针对多个产品等级结构 比如，华为手机，可以有 mate、p30 等等子类 但是华为不只做手机，还有电脑、电视，电脑、电视、手机位于不同的产品登记结构，但是他们是由一个工厂生产的，称为产品族</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">//这里汽车厂商作为一个产品族，既可以生产车，也可以生产发动机</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">AutomakerFactory</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">createCar</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">throw</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Error</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;不能调用抽象方法，请自己实现&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">createEngine</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">throw</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Error</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;不能调用抽象方法，请自己实现&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">BenzFactory</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">AutomakerFactory</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">createCar</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">BenzCar</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">createEngine</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">BenzEngine</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">AudiFactory</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">AutomakerFactory</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">createCar</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">AudiCar</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">createEngine</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">AudiEngine</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Car</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">drive</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">throw</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Error</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;不能调用抽象方法，请自己实现&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">BenzCar</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">Car</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">drive</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;Benz drive&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">AudiCar</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">Car</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">drive</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;Audi drive&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Engine</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">start</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">throw</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Error</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;不能调用抽象方法，请自己实现&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">BenzEngine</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">Engine</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">start</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;Benz engine start&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">AudiEngine</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">Engine</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">start</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;Audi engine start&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">benz</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">BenzFactory</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">benzCar</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">benz</span><span style="color:#839496;">.</span><span style="color:#268BD2;">createCar</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">benzEngine</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">benz</span><span style="color:#839496;">.</span><span style="color:#268BD2;">createEngine</span><span style="color:#839496;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">audi</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">AudiFactory</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">audiCar</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">audi</span><span style="color:#839496;">.</span><span style="color:#268BD2;">createCar</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">audiEngine</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">audi</span><span style="color:#839496;">.</span><span style="color:#268BD2;">createEngine</span><span style="color:#839496;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">benzCar</span><span style="color:#839496;">.</span><span style="color:#268BD2;">drive</span><span style="color:#839496;">(); </span><span style="color:#586E75;font-style:italic;">// Benz drive</span></span>
<span class="line"><span style="color:#268BD2;">benzEngine</span><span style="color:#839496;">.</span><span style="color:#268BD2;">start</span><span style="color:#839496;">(); </span><span style="color:#586E75;font-style:italic;">// Benz engine start</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">audiCar</span><span style="color:#839496;">.</span><span style="color:#268BD2;">drive</span><span style="color:#839496;">(); </span><span style="color:#586E75;font-style:italic;">// Audi drive</span></span>
<span class="line"><span style="color:#268BD2;">audiEngine</span><span style="color:#839496;">.</span><span style="color:#268BD2;">start</span><span style="color:#839496;">(); </span><span style="color:#586E75;font-style:italic;">// Audi engine start</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br></div></div><p>缺点也是随着分类越来越多，定义的类会越来越多，系统复杂度变高</p><p>参考：<a href="https://juejin.cn/post/6844903653774458888" target="_blank" rel="noreferrer">工厂模式</a>、<a href="https://juejin.cn/post/6844903895546724366" target="_blank" rel="noreferrer">工厂模式详解</a>、js 设计模式、<a href="https://juejin.cn/post/6844904018393710606" target="_blank" rel="noreferrer">抽象工厂模式-字节</a></p><h3 id="装饰者模式" tabindex="-1">装饰者模式 <a class="header-anchor" href="#装饰者模式" aria-label="Permalink to &quot;装饰者模式&quot;">​</a></h3><p>为了避免经常要去修改对象自身代码，我们需要用到装饰者模式 装饰者模式可以给某个对象添加额外的职责，而不会影响该类的派生对象 核心思想是装饰一些东西，但不影响原来的功能，给对象增加一个额外的功能 在前端领域，可以看作在某个函数执行前或者执行后运行一些额外的小功能</p><ul><li>AOP 面向切面编程</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">AOP</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {};</span></span>
<span class="line"><span style="color:#268BD2;">AOP</span><span style="color:#839496;">.</span><span style="color:#268BD2;">before</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (fn, before) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">before</span><span style="color:#839496;">.</span><span style="color:#268BD2;">apply</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">, </span><span style="color:#268BD2;">arguments</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  };</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">AOP</span><span style="color:#839496;">.</span><span style="color:#268BD2;">after</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (fn, after) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">fn</span><span style="color:#839496;">.</span><span style="color:#268BD2;">apply</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">, </span><span style="color:#268BD2;">arguments</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">after</span><span style="color:#839496;">.</span><span style="color:#268BD2;">apply</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">, </span><span style="color:#268BD2;">arguments</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  };</span></span>
<span class="line"><span style="color:#839496;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>es7 decorator</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">losgWrapper</span><span style="color:#859900;">=</span><span style="color:#839496;">targetClass</span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;">{</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">originRender</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">targetClass</span><span style="color:#839496;">.prototype.</span><span style="color:#268BD2;">render</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">targetClass</span><span style="color:#839496;">.prototype.</span><span style="color:#268BD2;">render</span><span style="color:#859900;">=</span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;">(){</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">xxx</span><span style="color:#839496;">()</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">originRender</span><span style="color:#839496;">.</span><span style="color:#268BD2;">apply</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">yyyy</span><span style="color:#839496;">()</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">targetClass</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">App</span><span style="color:#839496;">{</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(){</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">title</span><span style="color:#859900;">=</span><span style="color:#2AA198;">&quot;&quot;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">render</span><span style="color:#839496;">(){}</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">App</span><span style="color:#859900;">=</span><span style="color:#268BD2;">logWrapper</span><span style="color:#839496;">(</span><span style="color:#268BD2;">App</span><span style="color:#839496;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// es7提案修饰符，可以直接使用@logWrapper装饰，typescript也支持修饰符</span></span>
<span class="line"><span style="color:#839496;">@</span><span style="color:#268BD2;">logWrapper</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">App</span><span style="color:#839496;">{</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">...</span><span style="color:#268BD2;">some</span><span style="color:#839496;"> code</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ul><li>自行车的例子</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Bicycle</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">wash</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;清洗&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">ride</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;出发&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">getPrice</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#D33682;">100</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">BicycleDecorator</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(bicycle) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">bicycle</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">bicycle</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">wash</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">bicycle</span><span style="color:#839496;">.</span><span style="color:#268BD2;">wash</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">ride</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">bicycle</span><span style="color:#839496;">.</span><span style="color:#268BD2;">ride</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">getPrice</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">bicycle</span><span style="color:#839496;">.</span><span style="color:#268BD2;">getPrice</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">HeadlightDecorator</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">BicycleDecorator</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(bicycle) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">super</span><span style="color:#839496;">(</span><span style="color:#268BD2;">bicycle</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">getPrice</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">bicycle</span><span style="color:#839496;">.</span><span style="color:#268BD2;">getPrice</span><span style="color:#839496;">() </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#D33682;">100</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">bicycle</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Bicycle</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">bicycle</span><span style="color:#839496;">.</span><span style="color:#268BD2;">getPrice</span><span style="color:#839496;">());</span></span>
<span class="line"><span style="color:#268BD2;">bicycle</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">HeadlightDecorator</span><span style="color:#839496;">(</span><span style="color:#268BD2;">bicycle</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">bicycle</span><span style="color:#839496;">.</span><span style="color:#268BD2;">getPrice</span><span style="color:#839496;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">//100</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">//200</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h3 id="单例模式" tabindex="-1">单例模式 <a class="header-anchor" href="#单例模式" aria-label="Permalink to &quot;单例模式&quot;">​</a></h3><p>提供一个全局单一的实例，确保所有代码使用同一份全局资源。</p><ul><li>基本的单例模式</li></ul><p>一句话总结就是单体就是一个只能被实例化一次并且可以通过一个众所周知的访问点访问的类 也可以说是一个用来划分命名空间并将一批相关方法和属性组织在一起的对象，如果可以被实例化，智能呗实例化一次</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">singleTon</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  name1: </span><span style="color:#2AA198;">&#39;xxx&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  name2: </span><span style="color:#2AA198;">&#39;yyy&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">methods1</span><span style="color:#839496;">() {},</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">method2</span><span style="color:#839496;">() {},</span></span>
<span class="line"><span style="color:#839496;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>面向对象设计的第一条原则，类可以被拓展，但不能被修改。所以创建完这么一个单体模式，不应该使用 delete 操作符去更改他 对象字面量只是用来创建单体的方式之一 单体通常有两个部分组成，包括方法和属性成员，以及用于访问它的变量 使用单体模式能有效防止方法被不同的人意外改写 ​</p><p>使用闭包写的单体模式又称为模块模式 ​</p><p>在数据量较大时，还有一种优化方式是使用惰性实例化，通过创建一个 getInstance()方法，它会去检查单体是否已经被实例化，如果没有才会创建并返回其实例，如果已经实例化，它会返回现有实例。调用方式为 x.getInstace().method()</p><h3 id="链式调用" tabindex="-1">链式调用 <a class="header-anchor" href="#链式调用" aria-label="Permalink to &quot;链式调用&quot;">​</a></h3><p>jQuery 的设计方式，每次操作都会返回原对象</p><h3 id="桥接模式" tabindex="-1">桥接模式 <a class="header-anchor" href="#桥接模式" aria-label="Permalink to &quot;桥接模式&quot;">​</a></h3><p>桥接模式能够在不改变调用方式的情况下让 class1 和 class2 独立于 bridgeClass 发生改变</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Class1</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (a, b, c) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">b</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">b</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">c</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">c</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Class2</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (d) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">d</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">d</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">BridgeClass</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (a, b, c, d) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">one</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Class1</span><span style="color:#839496;">(</span><span style="color:#268BD2;">a</span><span style="color:#839496;">, </span><span style="color:#268BD2;">b</span><span style="color:#839496;">, </span><span style="color:#268BD2;">c</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">two</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Class2</span><span style="color:#839496;">(</span><span style="color:#268BD2;">d</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>太抽象。其实可以看成是将汽车的车型和引擎分离，用的时候组装一下</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 比如现在有个Car类，有个继承于Car的RefinedCar，构造方法中接受一个Engine对象作为参数，</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 这个Engine作为具体引擎的抽象类</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 使用的时候只需要</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">car</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">RefinedCar</span><span style="color:#839496;">(</span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">HybirdEngine</span><span style="color:#839496;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">//这样一来，可以实现车和引擎的独立开发</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="`+p+`" alt="image.png"></p><h3 id="组合模式" tabindex="-1">组合模式 <a class="header-anchor" href="#组合模式" aria-label="Permalink to &quot;组合模式&quot;">​</a></h3><p>组合模式适合层层嵌套的树状结构 组合模式的层次体系中分为叶对象和组合对象。 ​</p><p>两种情况下适合使用组合模式</p><ul><li>存在一批组织成某种层次体系的对象</li><li>希望对这批对象或其中的一部分对象实施一个操作</li></ul><h3 id="门面模式" tabindex="-1">门面模式 <a class="header-anchor" href="#门面模式" aria-label="Permalink to &quot;门面模式&quot;">​</a></h3><p>非常常用的模式，主要有两个作用</p><ul><li>消除类与使用它的客户代码之间的耦合</li><li>简化类的接口</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">util</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">stop</span><span style="color:#839496;">() {},</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">start</span><span style="color:#839496;">() {},</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">fire</span><span style="color:#839496;">() {},</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">drive</span><span style="color:#839496;">() {},</span></span>
<span class="line"><span style="color:#839496;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="适配器模式" tabindex="-1">适配器模式 <a class="header-anchor" href="#适配器模式" aria-label="Permalink to &quot;适配器模式&quot;">​</a></h3><p>用来协调不同的接口。与门面模式看起来相似，实则不同。 它与门面模式的差别在于如何改变接口。门面元素展现的是一个简化的接口，它并不提供额外的选择，有时为了方便完成常见任务还会做出一些嘉定。而适配器则要把一个 pp{}接口转换为另一个接口，并不会滤除。 对函数参数的适配，if else 都是适配器模式的体现</p><h3 id="享元模式" tabindex="-1">享元模式 <a class="header-anchor" href="#享元模式" aria-label="Permalink to &quot;享元模式&quot;">​</a></h3><p>最适合于解决因创建大量类似对象而累及性能的问题</p><p>享元模式用于减少应用程序所需对象的数量。将对象的内部状态划分为内在数据和外在数据</p><ul><li>内在数据。类的内部方法所需要的信息</li><li>外在数据。可以从类身上剥离并存储在外部的信息</li></ul><p>创建享元对象需要使用工厂。是为了跟踪到已经实例化的各个对象</p><p>举例：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 表示一个城市的所有汽车，需要保存每一辆汽车的详细情况甚至及其所有权的详细情况</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Car</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (year, price) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">year</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">year</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">price</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">price</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">// 各种详细信息</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#859900;">Car</span><span style="color:#839496;">.prototype </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">getYear</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">year</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">getPrice</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">price</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>--</p><p>数以万计的汽车信息消耗掉了大量资源。为了优化这个问题，需要使用享元模式减少所需对象的数目</p><p>首先划分内在状态和外在状态。车子的自然属性输入内在数据，所有权属性属于外在数据。这意味着对于车子来说，品牌、型号和出厂日期的每一种组合，只需要一个汽车对象。对于所有权数据来说，同一个类型的各车主都可以共享一个汽车对象</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 我们需要创建一个工厂来生成汽车</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">carFactory</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">createdCars</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {};</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">createCar</span><span style="color:#839496;">(year, price) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">createdClass</span><span style="color:#839496;">[</span><span style="color:#268BD2;">year</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;-&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">price</span><span style="color:#839496;">]) {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#586E75;font-style:italic;">//如果汽车实例存在，就直接返回已有的实例</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">createdCars</span><span style="color:#839496;">[</span><span style="color:#268BD2;">year</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;-&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">price</span><span style="color:#839496;">];</span></span>
<span class="line"><span style="color:#839496;">      } </span><span style="color:#859900;">else</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">car</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Car</span><span style="color:#839496;">(</span><span style="color:#268BD2;">year</span><span style="color:#839496;">, </span><span style="color:#268BD2;">owner</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">createdCars</span><span style="color:#839496;">[</span><span style="color:#268BD2;">year</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;price&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">price</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">car</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">car</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">      }</span></span>
<span class="line"><span style="color:#839496;">    },</span></span>
<span class="line"><span style="color:#839496;">  };</span></span>
<span class="line"><span style="color:#839496;">})();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>还需要管理外在状态</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 用一个单体模式封装外在状态数据的管理器</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">CarRecordManager</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">carRecordDatabase</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {};</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">addCarRecord</span><span style="color:#839496;">: </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (year, price, owner, age) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">car</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">CarFactory</span><span style="color:#839496;">.</span><span style="color:#268BD2;">createCar</span><span style="color:#839496;">(</span><span style="color:#268BD2;">year</span><span style="color:#839496;">, </span><span style="color:#268BD2;">owner</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">carRecordDatabase</span><span style="color:#839496;">[</span><span style="color:#268BD2;">owner</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">car</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">age</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">      };</span></span>
<span class="line"><span style="color:#839496;">    },</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 其他操作</span></span>
<span class="line"><span style="color:#839496;">  };</span></span>
<span class="line"><span style="color:#839496;">})();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>从 Car 类剥离的数据都在 CarRecordManage 这个单体的私有属性 carRecordDatabase 中。</p><p>这种优化是以复杂性为代价的。原先只有一个汽车类，现在却变成了一个类和两个单体对象。并且把一个数据保存在两个不同的地方这种做法令人困惑，但是能够解决性能，这些无伤大雅。享元模式运用得当能够显著提升程序的性能</p><p>管理外在数据有许多方法。之前用到的单体管理器是一种较常见的做法，也可以使用组合模式</p><p>示例</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 日历，顺序显示每月中的各天，还会按顺序显示一年中的各个月</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">CalendarYear</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (year, parent) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">year</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">year</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">document</span><span style="color:#839496;">.</span><span style="color:#268BD2;">createElement</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;div&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;">.</span><span style="color:#268BD2;">style</span><span style="color:#839496;">.</span><span style="color:#268BD2;">display</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;none&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">parent</span><span style="color:#839496;">.</span><span style="color:#268BD2;">appendChild</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">isLeapYear</span><span style="color:#839496;">(y) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">y</span><span style="color:#839496;"> </span><span style="color:#859900;">&gt;</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> </span><span style="color:#859900;">!</span><span style="color:#839496;">(</span><span style="color:#268BD2;">y</span><span style="color:#839496;"> </span><span style="color:#859900;">%</span><span style="color:#839496;"> </span><span style="color:#D33682;">4</span><span style="color:#839496;">) </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">y</span><span style="color:#839496;"> </span><span style="color:#859900;">%</span><span style="color:#839496;"> </span><span style="color:#D33682;">100</span><span style="color:#839496;"> </span><span style="color:#859900;">||</span><span style="color:#839496;"> </span><span style="color:#859900;">!</span><span style="color:#839496;">(</span><span style="color:#268BD2;">y</span><span style="color:#839496;"> </span><span style="color:#859900;">%</span><span style="color:#839496;"> </span><span style="color:#D33682;">400</span><span style="color:#839496;">));</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">months</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [];</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">numDays</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [</span><span style="color:#D33682;">31</span><span style="color:#839496;">, </span><span style="color:#268BD2;">isLeapYear</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">year</span><span style="color:#839496;">) </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#D33682;">29</span><span style="color:#839496;"> </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#D33682;">28</span><span style="color:#839496;">, </span><span style="color:#D33682;">31</span><span style="color:#839496;">, </span><span style="color:#D33682;">30</span><span style="color:#839496;">];</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859900;">CalendarYear</span><span style="color:#839496;">.prototype </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">display</span><span style="color:#839496;">: </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">for</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">i</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">, </span><span style="color:#268BD2;">len</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">months</span><span style="color:#839496;">.length; </span><span style="color:#268BD2;">i</span><span style="color:#839496;"> </span><span style="color:#859900;">&lt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">len</span><span style="color:#839496;">; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">months</span><span style="color:#839496;">[</span><span style="color:#268BD2;">i</span><span style="color:#839496;">].</span><span style="color:#268BD2;">display</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;">.</span><span style="color:#268BD2;">style</span><span style="color:#839496;">.</span><span style="color:#268BD2;">display</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;block&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">CalendarMonth</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (monthNum, numDays, parent) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">monthNum</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">monthNum</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">document</span><span style="color:#839496;">.</span><span style="color:#268BD2;">createElement</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;div&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;">.</span><span style="color:#268BD2;">style</span><span style="color:#839496;">.</span><span style="color:#268BD2;">display</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;none&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">parent</span><span style="color:#839496;">.</span><span style="color:#268BD2;">appendChild</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">for</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">i</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">, </span><span style="color:#268BD2;">len</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">numDays</span><span style="color:#839496;">; </span><span style="color:#268BD2;">i</span><span style="color:#839496;"> </span><span style="color:#859900;">&lt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">len</span><span style="color:#839496;">; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">days</span><span style="color:#839496;">[</span><span style="color:#268BD2;">i</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">CalendarDay</span><span style="color:#839496;">(</span><span style="color:#268BD2;">i</span><span style="color:#839496;">, </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">months</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [];</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">numDays</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [</span><span style="color:#D33682;">31</span><span style="color:#839496;">, </span><span style="color:#268BD2;">isLeapYear</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">year</span><span style="color:#839496;">) </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#D33682;">29</span><span style="color:#839496;"> </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#D33682;">28</span><span style="color:#839496;">, </span><span style="color:#D33682;">31</span><span style="color:#839496;">, </span><span style="color:#D33682;">30</span><span style="color:#839496;">];</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#859900;">CalendarMonth</span><span style="color:#839496;">.prototype </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">display</span><span style="color:#839496;">: </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">for</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">i</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">, </span><span style="color:#268BD2;">len</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">days</span><span style="color:#839496;">.length; </span><span style="color:#268BD2;">i</span><span style="color:#839496;"> </span><span style="color:#859900;">&lt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">len</span><span style="color:#839496;">; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">days</span><span style="color:#839496;">[</span><span style="color:#268BD2;">i</span><span style="color:#839496;">].</span><span style="color:#268BD2;">display</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;">.</span><span style="color:#268BD2;">style</span><span style="color:#839496;">.</span><span style="color:#268BD2;">display</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;block&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">CalendarDay</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (date, parent) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">date</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">date</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">document</span><span style="color:#839496;">.</span><span style="color:#268BD2;">createElement</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;div&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;">.</span><span style="color:#268BD2;">style</span><span style="color:#839496;">.</span><span style="color:#268BD2;">display</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;none&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">parent</span><span style="color:#839496;">.</span><span style="color:#268BD2;">appendChild</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#859900;">CalendarDay</span><span style="color:#839496;">.prototype </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">display</span><span style="color:#839496;">: </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;">.</span><span style="color:#268BD2;">style</span><span style="color:#839496;">.</span><span style="color:#268BD2;">display</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;block&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;">.</span><span style="color:#268BD2;">innerHTML</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">date</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><p>根据这段代码的实现，我们不得不为一年创建 365 个 CalendarDay 对象。</p><p>更有效的做法是无论日历要显示多少年，都只用一个 CalendarDay 对象来代表所有的日期</p><p>​ <strong>改造 calendar</strong></p><ul><li>第一步，把 CalendarDay 对象转化为享元对象，除去其中所有保存的数据</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">CalendarDay</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {};</span></span>
<span class="line"><span style="color:#859900;">CalendarDay</span><span style="color:#839496;">.prototype </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">display</span><span style="color:#839496;">: </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (date, parent) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">element</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">document</span><span style="color:#839496;">.</span><span style="color:#268BD2;">createElement</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;div&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">parent</span><span style="color:#839496;">.</span><span style="color:#268BD2;">appendChild</span><span style="color:#839496;">(</span><span style="color:#268BD2;">element</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">element</span><span style="color:#839496;">.</span><span style="color:#268BD2;">innerHTML</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">date</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>这里直接实例化该对象<code>const calendarDay=new CalendarDay()</code></p><ul><li>第二步，改造 CalendarMonth</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 复合物</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">CalendarMonth</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (monthNum, numDays, parent) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">monthNum</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">monthNum</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">document</span><span style="color:#839496;">.</span><span style="color:#268BD2;">createElement</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;div&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;">.</span><span style="color:#268BD2;">style</span><span style="color:#839496;">.</span><span style="color:#268BD2;">display</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;none&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">parent</span><span style="color:#839496;">.</span><span style="color:#268BD2;">appendChild</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">days</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [];</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">for</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">i</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">, </span><span style="color:#268BD2;">len</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">numDays</span><span style="color:#839496;">; </span><span style="color:#268BD2;">i</span><span style="color:#839496;"> </span><span style="color:#859900;">&lt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">len</span><span style="color:#839496;">; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">days</span><span style="color:#839496;">[</span><span style="color:#268BD2;">i</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">CalendarDay</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#859900;">CalendarMonth</span><span style="color:#839496;">.prototype </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">display</span><span style="color:#839496;">: </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">for</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">i</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">, </span><span style="color:#268BD2;">len</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">days</span><span style="color:#839496;">.length; </span><span style="color:#268BD2;">i</span><span style="color:#839496;"> </span><span style="color:#859900;">&lt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">len</span><span style="color:#839496;">; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">days</span><span style="color:#839496;">[</span><span style="color:#268BD2;">i</span><span style="color:#839496;">].</span><span style="color:#268BD2;">display</span><span style="color:#839496;">(</span><span style="color:#268BD2;">i</span><span style="color:#839496;">, </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">element</span><span style="color:#839496;">.</span><span style="color:#268BD2;">style</span><span style="color:#839496;">.</span><span style="color:#268BD2;">display</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;block&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>此例子中，没有像之前的管理器一样使用一个中心数据库，其实其他类也没做什么修改。 这是因为组合对象的数据结构本身就已经包含了所有的外在数据</p><p>组合模式和享元模式配合的比较完美的，因为组合对象通常都拥有大量叶对象，它保存着许多可作为外在 数据处理的数据，叶对象通常只包含极少的内在数据，所以容易被 转化为共享资源</p><blockquote><p>另外在 js 需要创建大量 html 内容的情况下，享元模式非常有用</p></blockquote><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>享元模式的使用条件</p><ul><li>适合在使用了大量资源密集型对象时使用，如果只是少量对象，那么这样做不划算</li><li>对象中所保存的数据至少有一部分能被转化为外在数据</li><li>将外在数据分离出去后，独一无二的对象的数目相对少，最理想的是只存在一个独一无二的对象</li></ul></div><h4 id="一般的实现步骤" tabindex="-1">一般的实现步骤 <a class="header-anchor" href="#一般的实现步骤" aria-label="Permalink to &quot;一般的实现步骤&quot;">​</a></h4><ol><li>剥离所有外在数据</li><li>创建一个用来控制该类实例化的工厂。该工厂掌握该类所有已创建出来的独一无二的实例</li><li>创建一个用来保存外在数据的管理器。它把内在数据提供给工厂对象以创建一个对象。外在数据则被保存在管理器的一个数据结构中，管理器随后会根据需要将这些数据提供给共享对象的方法</li></ol><h3 id="代理模式" tabindex="-1">代理模式 <a class="header-anchor" href="#代理模式" aria-label="Permalink to &quot;代理模式&quot;">​</a></h3><p>代理是一个对象，用来控制对另一个对象的访问，具有与另一个对象同样的接口，并会把任何方法调用传递给那个对象</p><h4 id="代理如何控制对本体的访问" tabindex="-1">代理如何控制对本体的访问 <a class="header-anchor" href="#代理如何控制对本体的访问" aria-label="Permalink to &quot;代理如何控制对本体的访问&quot;">​</a></h4><p>不实现任何访问控制的代理最简单，只要把所有方法调用都传递到本体</p><p>最有用的代理类型是<strong>虚拟代理</strong>。它会讲本体的实例化推迟到有 方法被调用的时候，适合控制常见开销很大的本体的访问</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">publicLibraryVirtualProxy</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (catalog) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">library</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">null</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">catalog</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">catalog</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#268BD2;">publicLibraryVirtualProxy</span><span style="color:#839496;">.</span><span style="color:#268BD2;">prototye</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">_initializeLibrary</span><span style="color:#839496;">: </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">library</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#B58900;">null</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">library</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">publicLibraryVirtualProxy</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">catalog</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">findBooks</span><span style="color:#839496;">: </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (searchString) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">_initializeLibrary</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">library</span><span style="color:#839496;">.</span><span style="color:#268BD2;">findBooks</span><span style="color:#839496;">(</span><span style="color:#268BD2;">searchString</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>虚拟代理对于前端程序员来说比较有用，还有其他代理类型</p><ul><li>远程代理。需要远程对象长期存在，任何时候都可以从任何其他环境中访问。js 不适用是因为，其一是因为 js 的运行时环境不会长期存在，大多数 js 环境都在 web 浏览器中，随着用户的网上冲浪活动，通常每几分钟都会加载或者卸载一次，其二，js 无法建立到另一个运行时环境的套接字连接以访问其变量空间，即使它能长期存在，与此最接近的做法只是用 json 对方法调用进行序列化，然后用 ajax 技术将结果发送给某个资源</li><li>保护代理。根据客户的身份控制对特定方法的访问。</li></ul><h3 id="命令模式" tabindex="-1">命令模式 <a class="header-anchor" href="#命令模式" aria-label="Permalink to &quot;命令模式&quot;">​</a></h3><p>用来对方法进行参数化处理和传送</p><p>最简的命令对象的结构形式是一个操作和用以调用这个操作的独享的结合体</p><p>就是将对象的某个方法再包一层调用，实现调用对象和实现操作对象的分离</p><h3 id="职责链模式" tabindex="-1">职责链模式 <a class="header-anchor" href="#职责链模式" aria-label="Permalink to &quot;职责链模式&quot;">​</a></h3><p>由多个不同类型的对象组成。使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系。</p><p>将这个对象连成一条链，直到有一个对象处理它为止</p><p>运转流程：</p><ol><li>发送者知道链中的第一个接收者，向这个接收者发送请求</li><li>每一个接受者都对请求进行分析，要么处理它，要么往下传</li><li>每一个接受者知道的其他对象只有一个，即它在链中的下家</li><li>如果没有任何接收者处理请求，那么请求将从链上离开，可以报错或者做其他处理</li></ol><p>发出请求的客户端并不知道哪一个对象最终处理这个请求，系统的更改可以在不影响客户端的情况下动态地重新组织和分配责任</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 一个休假申请的例子，先建一个管理者类</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">abstract</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Manager</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(name</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">name</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">setSuperior</span><span style="color:#839496;">(superior</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Manager</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 设置上级</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">superior</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">superior</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">abstract</span><span style="color:#839496;"> </span><span style="color:#268BD2;">requestApplications</span><span style="color:#839496;">(request)</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">void</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 再来一个经理类</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">commonManager</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">Manager</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(name) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">super</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">name</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">requestApplications</span><span style="color:#839496;">(request) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 经理只能批准两天内的假期</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">request</span><span style="color:#839496;">.</span><span style="color:#268BD2;">Request</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;请假&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">request</span><span style="color:#839496;">.</span><span style="color:#268BD2;">Number</span><span style="color:#839496;"> </span><span style="color:#859900;">&lt;=</span><span style="color:#839496;"> </span><span style="color:#D33682;">2</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;经理批准&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    } </span><span style="color:#859900;">else</span><span style="color:#839496;"> </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">superior</span><span style="color:#839496;"> </span><span style="color:#859900;">!==</span><span style="color:#839496;"> </span><span style="color:#B58900;">null</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">superior</span><span style="color:#839496;">.</span><span style="color:#268BD2;">RequestApplications</span><span style="color:#839496;">(</span><span style="color:#268BD2;">request</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 还有总监类</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Majordomo</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">Manager</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(name) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">super</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">name</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">requestApplications</span><span style="color:#839496;">(request) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">request</span><span style="color:#839496;">.</span><span style="color:#268BD2;">RequestType</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;请假&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">request</span><span style="color:#839496;">.</span><span style="color:#268BD2;">Number</span><span style="color:#839496;"> </span><span style="color:#859900;">&lt;=</span><span style="color:#839496;"> </span><span style="color:#D33682;">5</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;总监批准&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    } </span><span style="color:#859900;">else</span><span style="color:#839496;"> </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">superior</span><span style="color:#839496;"> </span><span style="color:#859900;">!==</span><span style="color:#839496;"> </span><span style="color:#B58900;">null</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">superior</span><span style="color:#839496;">.</span><span style="color:#268BD2;">RequestApplications</span><span style="color:#839496;">(</span><span style="color:#268BD2;">request</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">GeneralManager</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">Manager</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">RequestApplications</span><span style="color:#839496;">(request) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">request</span><span style="color:#839496;">.</span><span style="color:#268BD2;">RequestType</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;请假&#39;</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;总经理批准请假&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    } </span><span style="color:#859900;">else</span><span style="color:#839496;"> </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">request</span><span style="color:#839496;">.</span><span style="color:#268BD2;">RequestType</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;加薪&#39;</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;总经理批准加薪&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 使用举例</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">jinli</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">CommonManager</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;经理&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">zongjian</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Majordomo</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;总监&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">zongjingli</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">GeneralManager</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;总经理&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">jinli</span><span style="color:#839496;">.</span><span style="color:#268BD2;">SetSuperior</span><span style="color:#839496;">(</span><span style="color:#268BD2;">zongjian</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">zongjian</span><span style="color:#839496;">.</span><span style="color:#268BD2;">SetSuperior</span><span style="color:#839496;">(</span><span style="color:#268BD2;">zongjingli</span><span style="color:#839496;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">request</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Request</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#268BD2;">request</span><span style="color:#839496;">.</span><span style="color:#268BD2;">RequestType</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;请假&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#268BD2;">request</span><span style="color:#839496;">.</span><span style="color:#268BD2;">RequestContent</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;小菜请假&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#268BD2;">request</span><span style="color:#839496;">.</span><span style="color:#268BD2;">Number</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#268BD2;">jinli</span><span style="color:#839496;">.</span><span style="color:#268BD2;">RequestApplications</span><span style="color:#839496;">(</span><span style="color:#268BD2;">request</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 客户端的申请都是由经理发起，但具体决策者是谁，客户端不知道</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br></div></div>`,162),r=[e];function c(t,y,i,b,u,m){return a(),n("div",null,r)}const D=s(o,[["render",c]]);export{B as __pageData,D as default};
