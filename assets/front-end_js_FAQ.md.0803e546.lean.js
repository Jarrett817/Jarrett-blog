import{_ as n}from"./chunks/XmlAbort.vue_vue_type_script_setup_true_lang.58eeac38.js";import{d as a,c as l,H as p,Q as s,o}from"./chunks/framework.7454da9a.js";import"./chunks/Button.0ced7b7f.js";const e=s(`<h3 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h3><ul><li><p>写出下面运行的结果,解释原因</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#D33682;">1</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;1&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 结果为11，数字与字符串相加，会把数字转为字符串，再相加</span></span>
<span class="line"><span style="color:#2AA198;">&#39;a&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#2AA198;">&#39;b&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 结果为aNaN,+&#39;b&#39;结果为NaN，NaN与字符串相加，转为字符串，所以是aNaN</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>如何让 (a == 1 &amp;&amp; a == 2 &amp;&amp; a == 3) 的值为 true?</p></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">i</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#859900;">Number</span><span style="color:#839496;">.prototype.</span><span style="color:#268BD2;">valueOf</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Number</span><span style="color:#839496;">(</span><span style="color:#D33682;">1</span><span style="color:#839496;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><p>写出下面运行的结果,解释原因</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">test</span><span style="color:#839496;">(person) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">person</span><span style="color:#839496;">.</span><span style="color:#268BD2;">age</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">26</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">person</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    name: </span><span style="color:#2AA198;">&#39;张三&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">    age: </span><span style="color:#D33682;">12</span></span>
<span class="line"><span style="color:#839496;">  };</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">person</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">p1</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  name: </span><span style="color:#2AA198;">&#39;李四&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  age: </span><span style="color:#D33682;">19</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">p2</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">test</span><span style="color:#839496;">(</span><span style="color:#268BD2;">p1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">p1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// -&gt; {name:&#39;张三&#39;,age:26}</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 函数内复制了p1的副本到局部变量person，与p1指向同一个保存引用的堆内存地址，因此age被改为26</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">p2</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// -&gt; {name:&#39;李四&#39;,age:12}</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 函数内部对person变量重新赋值，指向了新的堆内存地址，最后return出来的person是新赋值的person</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></li><li><p>实现两个大数相加</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;123456789012345678&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">b</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;876543210987654321&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">add</span><span style="color:#839496;">(a, b) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">maxLength</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Math</span><span style="color:#839496;">.</span><span style="color:#268BD2;">max</span><span style="color:#839496;">(</span><span style="color:#268BD2;">a</span><span style="color:#839496;">.length, </span><span style="color:#268BD2;">b</span><span style="color:#839496;">.length);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">!==</span><span style="color:#839496;"> </span><span style="color:#268BD2;">maxLength</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;">.</span><span style="color:#268BD2;">padStart</span><span style="color:#839496;">(</span><span style="color:#268BD2;">maxLength</span><span style="color:#839496;">, </span><span style="color:#D33682;">0</span><span style="color:#839496;">));</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">b</span><span style="color:#839496;"> </span><span style="color:#859900;">!==</span><span style="color:#839496;"> </span><span style="color:#268BD2;">maxLength</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">b</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">b</span><span style="color:#839496;">.</span><span style="color:#268BD2;">padStart</span><span style="color:#839496;">(</span><span style="color:#268BD2;">maxLength</span><span style="color:#839496;">, </span><span style="color:#D33682;">0</span><span style="color:#839496;">));</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">carryFlag</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">false</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">result</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">for</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">i</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">maxLength</span><span style="color:#839496;"> </span><span style="color:#859900;">-</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;">; </span><span style="color:#268BD2;">i</span><span style="color:#839496;"> </span><span style="color:#859900;">&gt;=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">--</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">sum</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">parseInt</span><span style="color:#839496;">(</span><span style="color:#268BD2;">a</span><span style="color:#839496;">[</span><span style="color:#268BD2;">i</span><span style="color:#839496;">]) </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">parseInt</span><span style="color:#839496;">(</span><span style="color:#268BD2;">b</span><span style="color:#839496;">[</span><span style="color:#268BD2;">i</span><span style="color:#839496;">]);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">carryFlag</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">sum</span><span style="color:#859900;">++</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">carryFlag</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">false</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">sum</span><span style="color:#839496;"> </span><span style="color:#859900;">/</span><span style="color:#839496;"> </span><span style="color:#D33682;">10</span><span style="color:#839496;"> </span><span style="color:#859900;">&gt;=</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">carryFlag</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">true</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">result</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">sum</span><span style="color:#839496;"> </span><span style="color:#859900;">%</span><span style="color:#839496;"> </span><span style="color:#D33682;">10</span><span style="color:#839496;">) </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">result</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    } </span><span style="color:#859900;">else</span><span style="color:#839496;"> </span><span style="color:#268BD2;">result</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">sum</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">result</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">carryFlag</span><span style="color:#839496;"> </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">result</span><span style="color:#839496;"> </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#268BD2;">result</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#268BD2;">add</span><span style="color:#839496;">(</span><span style="color:#268BD2;">a</span><span style="color:#839496;">, </span><span style="color:#268BD2;">b</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// &#39;999999999999999999&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div></li><li><p>手写类型判断函数</p></li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">myTypeOf</span><span style="color:#839496;">(params) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">res</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">Object</span><span style="color:#839496;">.prototype.</span><span style="color:#268BD2;">toString</span><span style="color:#839496;">.</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">params</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">res</span><span style="color:#839496;">.</span><span style="color:#268BD2;">slice</span><span style="color:#839496;">(</span><span style="color:#D33682;">1</span><span style="color:#839496;">, </span><span style="color:#859900;">-</span><span style="color:#D33682;">1</span><span style="color:#839496;">).</span><span style="color:#268BD2;">split</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39; &#39;</span><span style="color:#839496;">)[</span><span style="color:#D33682;">1</span><span style="color:#839496;">].</span><span style="color:#268BD2;">toLowerCase</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>手写深拷贝函数</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">myTypeOf</span><span style="color:#839496;">(params) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">res</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">Object</span><span style="color:#839496;">.prototype.</span><span style="color:#268BD2;">toString</span><span style="color:#839496;">.</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">params</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">res</span><span style="color:#839496;">.</span><span style="color:#268BD2;">slice</span><span style="color:#839496;">(</span><span style="color:#D33682;">1</span><span style="color:#839496;">, </span><span style="color:#859900;">-</span><span style="color:#D33682;">1</span><span style="color:#839496;">).</span><span style="color:#268BD2;">split</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39; &#39;</span><span style="color:#839496;">)[</span><span style="color:#D33682;">1</span><span style="color:#839496;">].</span><span style="color:#268BD2;">toLowerCase</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">forEach</span><span style="color:#839496;">(ary, fn) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">index</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">length</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">ary</span><span style="color:#839496;">.length;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">while</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">index</span><span style="color:#839496;"> </span><span style="color:#859900;">&lt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">length</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">fn</span><span style="color:#839496;">(</span><span style="color:#268BD2;">ary</span><span style="color:#839496;">[</span><span style="color:#268BD2;">index</span><span style="color:#839496;">], </span><span style="color:#268BD2;">index</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">index</span><span style="color:#859900;">++</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">deepClone</span><span style="color:#839496;">(target, map </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">WeakMap</span><span style="color:#839496;">()) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">if</span><span style="color:#839496;"> ([</span><span style="color:#2AA198;">&#39;object&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;array&#39;</span><span style="color:#839496;">].</span><span style="color:#268BD2;">includes</span><span style="color:#839496;">(</span><span style="color:#268BD2;">myTypeOf</span><span style="color:#839496;">(</span><span style="color:#268BD2;">target</span><span style="color:#839496;">))) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">isObj</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">myTypeOf</span><span style="color:#839496;">(</span><span style="color:#268BD2;">target</span><span style="color:#839496;">) </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;object&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">result</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">isObj</span><span style="color:#839496;"> </span><span style="color:#859900;">?</span><span style="color:#839496;"> {} </span><span style="color:#859900;">:</span><span style="color:#839496;"> [];</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">map</span><span style="color:#839496;">.</span><span style="color:#268BD2;">get</span><span style="color:#839496;">(</span><span style="color:#268BD2;">target</span><span style="color:#839496;">)) </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">map</span><span style="color:#839496;">.</span><span style="color:#268BD2;">get</span><span style="color:#839496;">(</span><span style="color:#268BD2;">target</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">map</span><span style="color:#839496;">.</span><span style="color:#268BD2;">set</span><span style="color:#839496;">(</span><span style="color:#268BD2;">target</span><span style="color:#839496;">, </span><span style="color:#268BD2;">result</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">keys</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">isObj</span><span style="color:#839496;"> </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Object</span><span style="color:#839496;">.</span><span style="color:#268BD2;">keys</span><span style="color:#839496;">(</span><span style="color:#268BD2;">target</span><span style="color:#839496;">) </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#268BD2;">target</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">forEach</span><span style="color:#839496;">(</span><span style="color:#268BD2;">keys</span><span style="color:#839496;">, (value, key) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">isObj</span><span style="color:#839496;">) </span><span style="color:#268BD2;">key</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">value</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">result</span><span style="color:#839496;">[</span><span style="color:#268BD2;">key</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">deepClone</span><span style="color:#839496;">(</span><span style="color:#268BD2;">target</span><span style="color:#839496;">[</span><span style="color:#268BD2;">key</span><span style="color:#839496;">], </span><span style="color:#268BD2;">map</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    });</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">result</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  } </span><span style="color:#859900;">else</span><span style="color:#839496;"> </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">target</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="作用域与闭包" tabindex="-1">作用域与闭包 <a class="header-anchor" href="#作用域与闭包" aria-label="Permalink to &quot;作用域与闭包&quot;">​</a></h3><ol><li>下面代码的输出结果</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">20</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">foo</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">a</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">100</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">10</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">foo</span><span style="color:#839496;">());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>解：输出为 10，因为 js 采用词法作用域，函数内部的作用域在函数定义时就确定了，优先查找并使用函数内部新创建的 a 变量</p><ol><li>以下代码在执行过程中是否存在闭包</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">outer</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">inner</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">b</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">2</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">b</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">inner</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">outer</span><span style="color:#839496;">()();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>解：不存在，虽然 inner 函数在 outer 函数的作用域链里，但是没有引用外部变量，未形成闭包</p><ol><li>以下变种代码是否存在闭包，并且说出 inner 函数执行时的作用域链</li></ol><div class="language-diff line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#839496;">function outer() {</span></span>
<span class="line"><span style="color:#839496;">  var a = 1;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  function inner() {</span></span>
<span class="line"><span style="color:#839496;">    var b = 2;</span></span>
<span class="line"><span style="color:#DC322F;">-    console.log(b);</span></span>
<span class="line"><span style="color:#859900;">+    console.log(a);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  return inner;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">outer()();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>解：存在，inner 函数的 scopeChain:[inner,outer,global]</p><ol><li>以下代码是否存在闭包</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">outer</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">inner</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">a</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">inner</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">outer</span><span style="color:#839496;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>解：存在，内部 inner 函数引用了其外部作用域链上的变量，形成闭包，但由于没有 return 出来，在执行完毕后，闭包会被回收</p><h3 id="原型链" tabindex="-1">原型链 <a class="header-anchor" href="#原型链" aria-label="Permalink to &quot;原型链&quot;">​</a></h3><ul><li>手动实现 new 函数</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">New</span><span style="color:#839496;">(func) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">// 创建一个中间对象实例</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">res</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {};</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">// 将实例的原型指向构造函数的原型</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#859900;">func</span><span style="color:#839496;">.prototype </span><span style="color:#859900;">!==</span><span style="color:#839496;"> </span><span style="color:#B58900;">null</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">res</span><span style="color:#839496;">.__proto__ </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">func</span><span style="color:#839496;">.prototype;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">// 将构造函数的this指向新创建的中间对象</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">ret</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">func</span><span style="color:#839496;">.</span><span style="color:#268BD2;">apply</span><span style="color:#839496;">(</span><span style="color:#268BD2;">res</span><span style="color:#839496;">, </span><span style="color:#859900;">Array</span><span style="color:#839496;">.prototype.</span><span style="color:#268BD2;">slice</span><span style="color:#839496;">.</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">arguments</span><span style="color:#839496;">, </span><span style="color:#D33682;">1</span><span style="color:#839496;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">// 如果构造函数有明确指定返回对象，当返回结果类型是object或者function时，返回对象，否则返回指定的结果</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">if</span><span style="color:#839496;"> ((</span><span style="color:#859900;">typeof</span><span style="color:#839496;"> </span><span style="color:#268BD2;">ret</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;object&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">||</span><span style="color:#839496;"> </span><span style="color:#859900;">typeof</span><span style="color:#839496;"> </span><span style="color:#268BD2;">ret</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;function&#39;</span><span style="color:#839496;">) </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">ret</span><span style="color:#839496;"> </span><span style="color:#859900;">!==</span><span style="color:#839496;"> </span><span style="color:#B58900;">null</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">ret</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">res</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ul><li>手动实现 <code>instanceof</code> 的功能</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">myInstanceof</span><span style="color:#839496;">(instance, target) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">instanceProto</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">instance</span><span style="color:#839496;">.__proto__,</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">targetProto</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">target</span><span style="color:#839496;">.prototype;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">instanceProto</span><span style="color:#839496;">) </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#B58900;">false</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">instanceProto</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#268BD2;">targetProto</span><span style="color:#839496;">) </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#B58900;">true</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">else</span><span style="color:#839496;"> </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">myInstanceof</span><span style="color:#839496;">(</span><span style="color:#268BD2;">instanceProto</span><span style="color:#839496;">, </span><span style="color:#268BD2;">target</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="this、闭包" tabindex="-1">this、闭包 <a class="header-anchor" href="#this、闭包" aria-label="Permalink to &quot;this、闭包&quot;">​</a></h3><ul><li><p>写出下面运行的结果</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">name</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;window&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">person1</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  name: </span><span style="color:#2AA198;">&#39;person1&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">foo1</span><span style="color:#839496;">: </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">foo2</span><span style="color:#839496;">: () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;">),</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">foo3</span><span style="color:#839496;">: </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    };</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">foo4</span><span style="color:#839496;">: </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    };</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">person2</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> { name: </span><span style="color:#2AA198;">&#39;person2&#39;</span><span style="color:#839496;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo1</span><span style="color:#839496;">(); </span><span style="color:#586E75;font-style:italic;">// &#39;person1&#39;，this指向调用foo1的person1</span></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">person2</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// &#39;person2&#39;，通过call指定foo1的this为person2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo2</span><span style="color:#839496;">(); </span><span style="color:#586E75;font-style:italic;">// &#39;window&#39;，箭头函数的this由所在的作用域决定，var person不会创建作用域，因此指向全局作用域window</span></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo2</span><span style="color:#839496;">.</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">person2</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// &#39;window&#39;，箭头函数的this在声明时就已经确定，无法被call、apply改变</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo3</span><span style="color:#839496;">()(); </span><span style="color:#586E75;font-style:italic;">// &#39;window&#39;，person1.foo3()返回了内部函数，调用时是在全局作用域</span></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo3</span><span style="color:#839496;">.</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">person2</span><span style="color:#839496;">)(); </span><span style="color:#586E75;font-style:italic;">// &#39;window&#39;，内部函数的调用依然是在全局作用域</span></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo3</span><span style="color:#839496;">().</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">person2</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// &#39;person2&#39;，改变了内部函数的this</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo4</span><span style="color:#839496;">()(); </span><span style="color:#586E75;font-style:italic;">// &#39;person1&#39;，内部箭头函数的this即foo4的作用域的this</span></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo4</span><span style="color:#839496;">.</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">person2</span><span style="color:#839496;">)(); </span><span style="color:#586E75;font-style:italic;">// &#39;person2&#39;，改变了foo4的this</span></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo4</span><span style="color:#839496;">().</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">person2</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// &#39;person1&#39;，箭头函数不会被改变this</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div></li><li><p>写出下面运行的结果</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">name</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;window&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Person</span><span style="color:#839496;">(name) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">name</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo1</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  };</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo2</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo3</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    };</span></span>
<span class="line"><span style="color:#839496;">  };</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo4</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    };</span></span>
<span class="line"><span style="color:#839496;">  };</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">person1</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Person</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;person1&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">person2</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Person</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;person2&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo1</span><span style="color:#839496;">(); </span><span style="color:#586E75;font-style:italic;">// &#39;person1&#39;，构造函数的this指向实例对象</span></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">person2</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// &#39;person2&#39;，改变this指向</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo2</span><span style="color:#839496;">(); </span><span style="color:#586E75;font-style:italic;">// &#39;person1&#39;，箭头函数的this声明时已确定，指向实例</span></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo2</span><span style="color:#839496;">.</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">person2</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// &#39;person1&#39;，箭头函数不会被call改变this</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo3</span><span style="color:#839496;">()(); </span><span style="color:#586E75;font-style:italic;">// &#39;window&#39;，内部函数先返回再执行，this指向window</span></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo3</span><span style="color:#839496;">.</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">person2</span><span style="color:#839496;">)(); </span><span style="color:#586E75;font-style:italic;">// &#39;window&#39;，函数的this在被调用时确定，先返回了函数，再执行，指向window</span></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo3</span><span style="color:#839496;">().</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">person2</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// &#39;person2&#39;，指定了内部函数的this</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo4</span><span style="color:#839496;">()(); </span><span style="color:#586E75;font-style:italic;">// &#39;person1&#39;，内部箭头函数的this即foo4的this，指向实例</span></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo4</span><span style="color:#839496;">.</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">person2</span><span style="color:#839496;">)(); </span><span style="color:#586E75;font-style:italic;">// &#39;person2&#39;，指定的foo4的this即内部箭头函数的this</span></span>
<span class="line"><span style="color:#268BD2;">person1</span><span style="color:#839496;">.</span><span style="color:#268BD2;">foo4</span><span style="color:#839496;">().</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">person2</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// &#39;person1&#39;，无法指定箭头函数的this</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div></li><li><p>写出下面运行的结果</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">foo</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">myName</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;章三&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">test1</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">test2</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">2</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">innerBar</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">getName</span><span style="color:#839496;">: </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">test1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">myName</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    },</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">setName</span><span style="color:#839496;">: </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (newName) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">myName</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">newName</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  };</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">innerBar</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">bar</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">foo</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#268BD2;">bar</span><span style="color:#839496;">.</span><span style="color:#268BD2;">setName</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;李四&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">bar</span><span style="color:#839496;">.</span><span style="color:#268BD2;">getName</span><span style="color:#839496;">(); </span><span style="color:#586E75;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">bar</span><span style="color:#839496;">.</span><span style="color:#268BD2;">getName</span><span style="color:#839496;">()); </span><span style="color:#586E75;font-style:italic;">// 1 &#39;李四&#39;，存在闭包</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></li></ul><h3 id="事件循环" tabindex="-1">事件循环 <a class="header-anchor" href="#事件循环" aria-label="Permalink to &quot;事件循环&quot;">​</a></h3><p>注意点： 1、<code>promise.then</code> 会将状态持续传递下去，除非抛出错误或者 <code>return</code> 了 <code>Promise.reject</code> 2、没有显示返回值的函数默认返回 <code>undefined</code>，这同样会将<code>.then</code> 返回的 <code>promise</code> 状态置为 <code>fulfilled</code>,同样能将<code>.then</code>中的回调放入微任务队列 3、同步任务优先、异步任务挂起，处理顺序根据任务队列情况而定，宏任务优先级低，只有微任务队列清空才会去拿一个宏任务出来执行 4、PromiseA+规定当 then 中参数不为函数时，必须忽略，表现在.then 中，会原样返回 promise 结果</p><ul><li><p>写出下面运行的结果</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#859900;">Promise</span><span style="color:#839496;">.</span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">(</span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">))</span></span>
<span class="line"><span style="color:#839496;">  .</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">Promise</span><span style="color:#839496;">.</span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">(</span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">5</span><span style="color:#839496;">))</span></span>
<span class="line"><span style="color:#839496;">      .</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">3</span><span style="color:#839496;">))</span></span>
<span class="line"><span style="color:#839496;">      .</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">4</span><span style="color:#839496;">))</span></span>
<span class="line"><span style="color:#839496;">      .</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">6</span><span style="color:#839496;">));</span></span>
<span class="line"><span style="color:#839496;">  })</span></span>
<span class="line"><span style="color:#839496;">  .</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">2</span><span style="color:#839496;">))</span></span>
<span class="line"><span style="color:#839496;">  .</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">7</span><span style="color:#839496;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 0、1、5、3、2、4、7、6</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">/* </span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">script开始</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">第一行的resolve同步执行 log 0，然后主线程直接执行到后续的第一个then，其中的回调直接放入微任务队列</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">此时script中同步任务执行完毕，主线程空闲，开始处理微任务，log 1</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">同步执行Promise.resolve,log 5，.then，当前上下文中同步任务执行完毕，将log 3 放入微任务队列，任务挂起</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">此时当前上下文中同步任务执行完毕，没有显式返回，相当于resolve，执行外层第二个.then，把log 2 放入微任务队列，任务挂起，此时没有同步任务，主线程去执行微任务队列，log 3</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">执行完后，return undefined，将后面log 4放入微任务队列，任务挂起</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">没有同步任务，主线程去处理微任务，log 2，执行完成后return undefined，将后面log 7放入微任务</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">没有同步任务，主线程去处理微任务，log 4，完成后返回undefined，将后面log 6放入微任务队列，任务挂起</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">没有同步任务，主线程去处理微任务，log 7</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">现在只剩下微任务队列里还剩一个log 6，执行log 6</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></li><li><p>写出下面运行的结果</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">first</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#859900;">Promise</span><span style="color:#839496;">((resolve, reject) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">3</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">p</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#859900;">Promise</span><span style="color:#839496;">((resolve, reject) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">7</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">setTimeout</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">5</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">(</span><span style="color:#D33682;">6</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">p</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">      }, </span><span style="color:#D33682;">0</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">(</span><span style="color:#D33682;">1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    });</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">(</span><span style="color:#D33682;">2</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">p</span><span style="color:#839496;">.</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(arg </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">arg</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    });</span></span>
<span class="line"><span style="color:#839496;">  });</span></span>
<span class="line"><span style="color:#268BD2;">first</span><span style="color:#839496;">().</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(arg </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">arg</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">});</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">4</span><span style="color:#839496;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 3、7、4、1、2、5、promise&lt;fulfilled，1&gt;</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> script开始</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> 执行first函数，同步执行log 3</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> 同步执行new Promise，log 7，setTimeout将回调分发至宏任务队列，任务挂起，主线程往下执行resolve(1)</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> log 1进入微任务队列</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> 执行resolve(2)，log 2 放入微任务队列</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> 同步执行p.then挂起，执行first后面的.then 挂起</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> 主线程同步执行log 4，同步任务执行完毕</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> 执行微任务队列，依次log 1、log 2</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> 微任务全部执行完毕，拿一个宏任务出来执行，log 5</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> 下一步resolve 6 没用，Promise A+ 中说明不可改变已经处理完毕的promise状态</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> 最后一步log p，是一个已经被置为fulfilled的promise</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div></li><li><p>写出下面运行的结果</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">async1</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">async</span><span style="color:#839496;"> () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;async1&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">setTimeout</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;timer1&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }, </span><span style="color:#D33682;">2000</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">await</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#859900;">Promise</span><span style="color:#839496;">(resolve </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;promise1&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  });</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;async1 end&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;async1 success&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;script start&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">async1</span><span style="color:#839496;">().</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(res </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">res</span><span style="color:#839496;">));</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;script end&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#859900;">Promise</span><span style="color:#839496;">.</span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">(</span><span style="color:#D33682;">1</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  .</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(</span><span style="color:#D33682;">2</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  .</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(</span><span style="color:#859900;">Promise</span><span style="color:#839496;">.</span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">(</span><span style="color:#D33682;">3</span><span style="color:#839496;">))</span></span>
<span class="line"><span style="color:#839496;">  .</span><span style="color:#268BD2;">catch</span><span style="color:#839496;">(</span><span style="color:#D33682;">4</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  .</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(res </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">res</span><span style="color:#839496;">));</span></span>
<span class="line"><span style="color:#268BD2;">setTimeout</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;timer2&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">}, </span><span style="color:#D33682;">1000</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// script start、async1、promise1、script end、1、timer2、timer1</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">/* </span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">同步执行script start</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">执行 async1，log async1</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">setTimeout 放入宏任务队列，异步任务挂起，执行下一个 new Promise，log promise1,没有resolve，挂起</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">后续的log async1 success和script end其实是在.then中，但是这个promise没有被resolve，不会放入微任务队列，不会执行后续代码</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">执行async1后的.then，放入微任务队列，挂起，执行log script end</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">执行Promise.resolve(1).then ，不是函数，忽略，下一步.then执行，参数不是函数，忽略,catch(4)不是函数，忽略</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">下一步执行.then，放入log res 放入微任务队列（即log 1）</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">执行setTimeout，放入宏任务队列，挂起，主线程处理微任务，log 1</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">最后依次执行宏任务队列，根据等待时间的快慢，log timer2、timer 1 </span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div></li><li><p>写出下面运行的结果</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">p1</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#859900;">Promise</span><span style="color:#839496;">(resolve </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">setTimeout</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;resolve3&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;timer1&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  }, </span><span style="color:#D33682;">0</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;resolve1&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;resolve2&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">})</span></span>
<span class="line"><span style="color:#839496;">  .</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(res </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">res</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">setTimeout</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">p1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }, </span><span style="color:#D33682;">1000</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  })</span></span>
<span class="line"><span style="color:#839496;">  .</span><span style="color:#268BD2;">finally</span><span style="color:#839496;">(res </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;finally&#39;</span><span style="color:#839496;">, </span><span style="color:#268BD2;">res</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  });</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// resolve1、finally,undefined、timer1、promise&lt;fulfilled,undefined&gt;</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">  执行new Promise，setTimeout放入宏任务队列</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">  resolve1放入微任务队列</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">  resolve2放入微任务队列</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">  任务挂起，执行.then,挂起</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">  无同步任务，执行微任务队列，log resolve1，resolve2没用</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">  setTimeout放入宏任务队列</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">  无同步任务，执行.finally，放入微任务队列，挂起</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">  无同步任务，执行微任务队列，log finally，undefined，因为上一个.then没有return，函数默认return undefined</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">  微任务执行完毕，执行宏任务队列，log timer1、promise&lt;fulfilled,undefined&gt;</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div></li></ul><h3 id="异步编程" tabindex="-1">异步编程 <a class="header-anchor" href="#异步编程" aria-label="Permalink to &quot;异步编程&quot;">​</a></h3><ol><li>实现 sleep 函数，在 n 毫秒之后执行函数，并以函数结果作为返回值(可用 ts 来写)</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">sleep</span><span style="color:#839496;">(fn, time) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#859900;">Promise</span><span style="color:#839496;">((resolve, reject) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">setTimeout</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">(</span><span style="color:#268BD2;">fn</span><span style="color:#839496;">());</span></span>
<span class="line"><span style="color:#839496;">    }, </span><span style="color:#268BD2;">time</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  });</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">sleep</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;执行&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}, </span><span style="color:#D33682;">3000</span><span style="color:#839496;">).</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(res </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">res</span><span style="color:#839496;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2"><li><p>实现 Promise.retry</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 实现 Promise.retry，重试异步函数</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 异步函数执行成功后 resolve 结果，</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 失败后重试，尝试超过一定次数才真正的 reject</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#859900;">Promise</span><span style="color:#839496;">.</span><span style="color:#268BD2;">retry</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (fn, chance </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#859900;">Promise</span><span style="color:#839496;">(</span><span style="color:#93A1A1;font-weight:bold;">async</span><span style="color:#839496;"> (resolve, reject) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">while</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">chance</span><span style="color:#859900;">--</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">try</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">(</span><span style="color:#859900;">await</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fn</span><span style="color:#839496;">());</span></span>
<span class="line"><span style="color:#839496;">      } </span><span style="color:#859900;">catch</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">err</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">!</span><span style="color:#268BD2;">chance</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">reject</span><span style="color:#839496;">(</span><span style="color:#268BD2;">err</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">      }</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  });</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">doSomething</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#859900;">Promise</span><span style="color:#839496;">((res, reje) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">setTimeout</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">reje</span><span style="color:#839496;">(</span><span style="color:#D33682;">1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }, </span><span style="color:#D33682;">1000</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">  });</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859900;">Promise</span><span style="color:#839496;">.</span><span style="color:#268BD2;">retry</span><span style="color:#839496;">(</span><span style="color:#268BD2;">doSomething</span><span style="color:#839496;">, </span><span style="color:#D33682;">3</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  .</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(res </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;success,res&#39;</span><span style="color:#839496;">))</span></span>
<span class="line"><span style="color:#839496;">  .</span><span style="color:#268BD2;">catch</span><span style="color:#839496;">(err </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;error&#39;</span><span style="color:#839496;">, </span><span style="color:#268BD2;">err</span><span style="color:#839496;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div></li><li><p>手写 promise，使用<a href="https://github.com/promises-aplus/promises-tests" target="_blank" rel="noreferrer">promises-aplus-tests</a> 进行测试</p></li></ol><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#839496;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol><li><p>信号灯控制器 用异步编程的方式实现一个信号灯（交通灯）控制器，要求：</p><ul><li>红灯亮 50 秒</li><li>绿灯亮 60 秒</li><li>黄灯亮 10 秒</li><li>次序为 红-绿-黄-红-绿-黄</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">red</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;red&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">green</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;green&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">yellow</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;yellow&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// TODO</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">red</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;red shining&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">green</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;green shining&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">yellow</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;yellow shining&#39;</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div></li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TrafficLight</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  promisedLights </span><span style="color:#859900;">=</span><span style="color:#839496;"> [];</span></span>
<span class="line"><span style="color:#839496;">  stopSignal </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">false</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(lights) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">promisedLights</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">lights</span><span style="color:#839496;">.</span><span style="color:#268BD2;">map</span><span style="color:#839496;">(({ lighting, duration, color }) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">return</span><span style="color:#839496;"> () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#859900;">Promise</span><span style="color:#839496;">((resolve, reject) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">          </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">\`\${</span><span style="color:#268BD2;">color</span><span style="color:#2AA198;">} start!\`</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">          </span><span style="color:#268BD2;">lighting</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">          </span><span style="color:#268BD2;">setTimeout</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">stopSignal</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">              </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">\`\${</span><span style="color:#268BD2;">color</span><span style="color:#2AA198;">} end!\`</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">              </span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">            }</span></span>
<span class="line"><span style="color:#839496;">          }, </span><span style="color:#268BD2;">duration</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">        });</span></span>
<span class="line"><span style="color:#839496;">    });</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">async</span><span style="color:#839496;"> </span><span style="color:#268BD2;">start</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">while</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">promisedLights</span><span style="color:#839496;">.length) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">stopSignal</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">promisedLights</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [];</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">break</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">      }</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">light</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">promisedLights</span><span style="color:#839496;">.</span><span style="color:#268BD2;">shift</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">light</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> (</span><span style="color:#859900;">await</span><span style="color:#839496;"> </span><span style="color:#268BD2;">light</span><span style="color:#839496;">());</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">promisedLights</span><span style="color:#839496;">.</span><span style="color:#268BD2;">push</span><span style="color:#839496;">(</span><span style="color:#268BD2;">light</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">continue</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">stop</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">stopSignal</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">true</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">lights</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [</span></span>
<span class="line"><span style="color:#839496;">  { duration: </span><span style="color:#D33682;">5000</span><span style="color:#839496;">, lighting: </span><span style="color:#268BD2;">red</span><span style="color:#839496;">, color: </span><span style="color:#2AA198;">&#39;red&#39;</span><span style="color:#839496;"> },</span></span>
<span class="line"><span style="color:#839496;">  { duration: </span><span style="color:#D33682;">6000</span><span style="color:#839496;">, lighting: </span><span style="color:#268BD2;">green</span><span style="color:#839496;">, color: </span><span style="color:#2AA198;">&#39;green&#39;</span><span style="color:#839496;"> },</span></span>
<span class="line"><span style="color:#839496;">  { duration: </span><span style="color:#D33682;">1000</span><span style="color:#839496;">, lighting: </span><span style="color:#268BD2;">yellow</span><span style="color:#839496;">, color: </span><span style="color:#2AA198;">&#39;yellow&#39;</span><span style="color:#839496;"> }</span></span>
<span class="line"><span style="color:#839496;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">trafficLight</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">TrafficLight</span><span style="color:#839496;">(</span><span style="color:#268BD2;">lights</span><span style="color:#839496;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">trafficLight</span><span style="color:#839496;">.</span><span style="color:#268BD2;">start</span><span style="color:#839496;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">setTimeout</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">trafficLight</span><span style="color:#839496;">.</span><span style="color:#268BD2;">stop</span><span style="color:#839496;">(), </span><span style="color:#D33682;">100000</span><span style="color:#839496;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><ol start="2"><li>实现一个带并发限制的异步调度器 Scheduler，保证同时运行的任务最多有两个</li></ol><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">scheduler</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Scheduler</span><span style="color:#839496;">(</span><span style="color:#D33682;">2</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">scheduler</span><span style="color:#839496;">.</span><span style="color:#268BD2;">addTask</span><span style="color:#839496;">(</span><span style="color:#D33682;">1</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;1&#39;</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// 1s后输出’1&#39;</span></span>
<span class="line"><span style="color:#268BD2;">scheduler</span><span style="color:#839496;">.</span><span style="color:#268BD2;">addTask</span><span style="color:#839496;">(</span><span style="color:#D33682;">2</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;2&#39;</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// 2s后输出’2&#39;</span></span>
<span class="line"><span style="color:#268BD2;">scheduler</span><span style="color:#839496;">.</span><span style="color:#268BD2;">addTask</span><span style="color:#839496;">(</span><span style="color:#D33682;">1</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;3&#39;</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// 2s后输出’3&#39;</span></span>
<span class="line"><span style="color:#268BD2;">scheduler</span><span style="color:#839496;">.</span><span style="color:#268BD2;">addTask</span><span style="color:#839496;">(</span><span style="color:#D33682;">1</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;4&#39;</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// 3s后输出’4&#39;</span></span>
<span class="line"><span style="color:#268BD2;">scheduler</span><span style="color:#839496;">.</span><span style="color:#268BD2;">start</span><span style="color:#839496;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Scheduler</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  limit </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">2</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  taskQueue </span><span style="color:#859900;">=</span><span style="color:#839496;"> [];</span></span>
<span class="line"><span style="color:#839496;">  count </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">(limit) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">limit</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">limit</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">taskQueue</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [];</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">addTask</span><span style="color:#839496;">(time, value) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">taskQueue</span><span style="color:#839496;">.</span><span style="color:#268BD2;">push</span><span style="color:#839496;">(</span></span>
<span class="line"><span style="color:#839496;">      () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#859900;">Promise</span><span style="color:#839496;">((resolve, reject) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">          </span><span style="color:#268BD2;">setTimeout</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">value</span><span style="color:#839496;">, </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Date</span><span style="color:#839496;">().</span><span style="color:#268BD2;">getSeconds</span><span style="color:#839496;">());</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">          }, </span><span style="color:#268BD2;">time</span><span style="color:#839496;"> </span><span style="color:#859900;">*</span><span style="color:#839496;"> </span><span style="color:#D33682;">1000</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">        })</span></span>
<span class="line"><span style="color:#839496;">    );</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">start</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">count</span><span style="color:#839496;"> </span><span style="color:#859900;">&lt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">limit</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">taskQueue</span><span style="color:#839496;">.length) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">promiseTask</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">taskQueue</span><span style="color:#839496;">.</span><span style="color:#268BD2;">shift</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">count</span><span style="color:#859900;">++</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">promiseTask</span><span style="color:#839496;">().</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">count</span><span style="color:#859900;">--</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">start</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">      });</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">count</span><span style="color:#839496;"> </span><span style="color:#859900;">&lt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">limit</span><span style="color:#839496;">) </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">start</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">scheduler</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Scheduler</span><span style="color:#839496;">(</span><span style="color:#D33682;">2</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">scheduler</span><span style="color:#839496;">.</span><span style="color:#268BD2;">addTask</span><span style="color:#839496;">(</span><span style="color:#D33682;">1</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;1&#39;</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// 1s后输出’1&#39;</span></span>
<span class="line"><span style="color:#268BD2;">scheduler</span><span style="color:#839496;">.</span><span style="color:#268BD2;">addTask</span><span style="color:#839496;">(</span><span style="color:#D33682;">2</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;2&#39;</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// 2s后输出’2&#39;</span></span>
<span class="line"><span style="color:#268BD2;">scheduler</span><span style="color:#839496;">.</span><span style="color:#268BD2;">addTask</span><span style="color:#839496;">(</span><span style="color:#D33682;">1</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;3&#39;</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// 2s后输出’3&#39;</span></span>
<span class="line"><span style="color:#268BD2;">scheduler</span><span style="color:#839496;">.</span><span style="color:#268BD2;">addTask</span><span style="color:#839496;">(</span><span style="color:#D33682;">1</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;4&#39;</span><span style="color:#839496;">); </span><span style="color:#586E75;font-style:italic;">// 3s后输出’4&#39;</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;start&#39;</span><span style="color:#839496;">, </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Date</span><span style="color:#839496;">().</span><span style="color:#268BD2;">getSeconds</span><span style="color:#839496;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">scheduler</span><span style="color:#839496;">.</span><span style="color:#268BD2;">start</span><span style="color:#839496;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h3 id="axios-canceltoken-原理" tabindex="-1">axios cancelToken 原理 <a class="header-anchor" href="#axios-canceltoken-原理" aria-label="Permalink to &quot;axios cancelToken 原理&quot;">​</a></h3><p>cancelToken 是 abortController 的自行实现</p><p>XMLHttpRequest 提供了 abort 方法可以中止请求（后端是否接收到请求，取决于中止的阶段）</p><p>axios 中 onCanceled 是真正中止请求的方法，会调用 xhr.abort()且抛出 abort 错误</p><p>cancelToken 和 abortController 实现思路都是发布订阅机制，请求发起时订阅，抛出的 abort 方法调用时，触发订阅过的请求实例内部的 reject</p>`,45),r=s(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">xhr</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">XMLHttpRequest</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#268BD2;">xhr</span><span style="color:#839496;">.</span><span style="color:#268BD2;">method</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;GET&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#268BD2;">xhr</span><span style="color:#839496;">.</span><span style="color:#268BD2;">url</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;https://slowmo.glitch.me/5000&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#268BD2;">xhr</span><span style="color:#839496;">.</span><span style="color:#268BD2;">open</span><span style="color:#839496;">(</span><span style="color:#268BD2;">method</span><span style="color:#839496;">, </span><span style="color:#268BD2;">url</span><span style="color:#839496;">, </span><span style="color:#B58900;">true</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#268BD2;">xhr</span><span style="color:#839496;">.</span><span style="color:#268BD2;">send</span><span style="color:#839496;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// Abort the request at a later stage</span></span>
<span class="line"><span style="color:#268BD2;">abortButton</span><span style="color:#839496;">.</span><span style="color:#268BD2;">addEventListener</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;click&#39;</span><span style="color:#839496;">, </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">xhr</span><span style="color:#839496;">.</span><span style="color:#268BD2;">abort</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#268BD2;">request</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">configOrUrl</span><span style="color:#839496;">, </span><span style="color:#268BD2;">config</span><span style="color:#839496;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 合并配置</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">config</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">mergeConfig</span><span style="color:#839496;">(</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">defaults</span><span style="color:#839496;">, </span><span style="color:#268BD2;">config</span><span style="color:#839496;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 合并请求头信息</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">config</span><span style="color:#839496;">.</span><span style="color:#268BD2;">headers</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">AxiosHeaders</span><span style="color:#839496;">.</span><span style="color:#268BD2;">concat</span><span style="color:#839496;">(</span><span style="color:#268BD2;">contextHeaders</span><span style="color:#839496;">, </span><span style="color:#268BD2;">headers</span><span style="color:#839496;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 请求拦截器链</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">requestInterceptorChain</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [];</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">interceptors</span><span style="color:#839496;">.</span><span style="color:#268BD2;">request</span><span style="color:#839496;">.</span><span style="color:#268BD2;">forEach</span><span style="color:#839496;">(</span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">unshiftRequestInterceptors</span><span style="color:#839496;"> (interceptor) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">requestInterceptorChain</span><span style="color:#839496;">.</span><span style="color:#268BD2;">unshift</span><span style="color:#839496;">(</span><span style="color:#268BD2;">interceptor</span><span style="color:#839496;">.</span><span style="color:#268BD2;">fulfilled</span><span style="color:#839496;">, </span><span style="color:#268BD2;">interceptor</span><span style="color:#839496;">.</span><span style="color:#268BD2;">rejected</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 响应拦截器链</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">responseInterceptorChain</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [];</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">interceptors</span><span style="color:#839496;">.</span><span style="color:#268BD2;">response</span><span style="color:#839496;">.</span><span style="color:#268BD2;">forEach</span><span style="color:#839496;">(</span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">pushResponseInterceptors</span><span style="color:#839496;"> (interceptor) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">responseInterceptorChain</span><span style="color:#839496;">.</span><span style="color:#268BD2;">push</span><span style="color:#839496;">(</span><span style="color:#268BD2;">interceptor</span><span style="color:#839496;">.</span><span style="color:#268BD2;">fulfilled</span><span style="color:#839496;">, </span><span style="color:#268BD2;">interceptor</span><span style="color:#839496;">.</span><span style="color:#268BD2;">rejected</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 执行请求拦截器方法</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">doRequestInterceptorChain</span><span style="color:#839496;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 判断config.cancelToken.reason，也就是是否被取消</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">throwIfCancellationRequested</span><span style="color:#839496;">(</span><span style="color:#268BD2;">config</span><span style="color:#839496;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 请求体</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">requestData</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">config</span><span style="color:#839496;">.</span><span style="color:#268BD2;">data</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 创建一个xhr实例</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">request</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">XMLHttpRequest</span><span style="color:#839496;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// open xhr</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">request</span><span style="color:#839496;">.</span><span style="color:#268BD2;">open</span><span style="color:#839496;">(</span><span style="color:#268BD2;">config</span><span style="color:#839496;">.</span><span style="color:#268BD2;">method</span><span style="color:#839496;">.</span><span style="color:#268BD2;">toUpperCase</span><span style="color:#839496;">(), </span><span style="color:#268BD2;">buildURL</span><span style="color:#839496;">(</span><span style="color:#268BD2;">fullPath</span><span style="color:#839496;">, </span><span style="color:#268BD2;">config</span><span style="color:#839496;">.</span><span style="color:#268BD2;">params</span><span style="color:#839496;">, </span><span style="color:#268BD2;">config</span><span style="color:#839496;">.</span><span style="color:#268BD2;">paramsSerializer</span><span style="color:#839496;">), </span><span style="color:#B58900;">true</span><span style="color:#839496;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 请求状态变更处理函数</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">request</span><span style="color:#839496;">.</span><span style="color:#268BD2;">onreadystatechange</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">handleLoad</span><span style="color:#839496;"> () {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#586E75;font-style:italic;">//.....</span></span>
<span class="line"><span style="color:#839496;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 订阅取消事件</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">config</span><span style="color:#839496;">.</span><span style="color:#268BD2;">cancelToken</span><span style="color:#839496;"> </span><span style="color:#859900;">||</span><span style="color:#839496;"> </span><span style="color:#268BD2;">config</span><span style="color:#839496;">.</span><span style="color:#268BD2;">signal</span><span style="color:#839496;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#586E75;font-style:italic;">// 当token取消了，会执行该函数，也就是abort</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">onCanceled</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> cancel </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">request</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">          </span><span style="color:#859900;">return</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        }</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">reject</span><span style="color:#839496;">(</span><span style="color:#859900;">!</span><span style="color:#268BD2;">cancel</span><span style="color:#839496;"> </span><span style="color:#859900;">||</span><span style="color:#839496;"> </span><span style="color:#268BD2;">cancel</span><span style="color:#839496;">.</span><span style="color:#268BD2;">type</span><span style="color:#839496;"> </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">CanceledError</span><span style="color:#839496;">(</span><span style="color:#B58900;">null</span><span style="color:#839496;">, </span><span style="color:#268BD2;">config</span><span style="color:#839496;">, </span><span style="color:#268BD2;">request</span><span style="color:#839496;">) </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#268BD2;">cancel</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">request</span><span style="color:#839496;">.</span><span style="color:#268BD2;">abort</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">request</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">null</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">      };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#586E75;font-style:italic;">// 此处是用cancelToken的订阅取消事件</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">config</span><span style="color:#839496;">.</span><span style="color:#268BD2;">cancelToken</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">config</span><span style="color:#839496;">.</span><span style="color:#268BD2;">cancelToken</span><span style="color:#839496;">.</span><span style="color:#268BD2;">subscribe</span><span style="color:#839496;">(</span><span style="color:#268BD2;">onCanceled</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#586E75;font-style:italic;">// 此处是用signal，也就是AbortConrtroller订阅取消事件</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">config</span><span style="color:#839496;">.</span><span style="color:#268BD2;">signal</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">config</span><span style="color:#839496;">.</span><span style="color:#268BD2;">signal</span><span style="color:#839496;">.</span><span style="color:#268BD2;">aborted</span><span style="color:#839496;"> </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#268BD2;">onCanceled</span><span style="color:#839496;">() </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#268BD2;">config</span><span style="color:#839496;">.</span><span style="color:#268BD2;">signal</span><span style="color:#839496;">.</span><span style="color:#268BD2;">addEventListener</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;abort&#39;</span><span style="color:#839496;">, </span><span style="color:#268BD2;">onCanceled</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">      }</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 真正发送请求</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">request</span><span style="color:#839496;">.</span><span style="color:#268BD2;">send</span><span style="color:#839496;">(</span><span style="color:#268BD2;">requestData</span><span style="color:#839496;"> </span><span style="color:#859900;">||</span><span style="color:#839496;"> </span><span style="color:#B58900;">null</span><span style="color:#839496;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 再次判断config.cancelToken.reason，也就是是否被取消</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">throwIfCancellationRequested</span><span style="color:#839496;">(</span><span style="color:#268BD2;">config</span><span style="color:#839496;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 执行返回拦截器</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">doResponseInterceptorChain</span><span style="color:#839496;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br></div></div><p><a href="https://juejin.cn/post/7284417436752265277" target="_blank" rel="noreferrer">cancelToken 原理</a><a href="https://cloud.tencent.com/developer/article/2030277" target="_blank" rel="noreferrer">abortController 原理</a></p>`,3),D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/js/FAQ.md","filePath":"front-end/js/FAQ.md","lastUpdated":1711969628000}'),c={name:"front-end/js/FAQ.md"},B=a({...c,setup(t){return(y,i)=>(o(),l("div",null,[e,p(n),r]))}});export{D as __pageData,B as default};
