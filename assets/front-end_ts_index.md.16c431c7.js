import{_ as s,c as n,o as a,Q as l}from"./chunks/framework.7454da9a.js";const m=JSON.parse('{"title":"node","description":"","frontmatter":{"title":"node","desc":"《JavaScript设计模式》、《大话设计模式》笔记","keywords":"设计模式、笔记","date":"2020-02-17T01:01:00.000Z","cover":"https://cdn.jsdelivr.net/gh/chengpeiquan/assets-storage/img/2020/02/1.jpg"},"headers":[],"relativePath":"front-end/ts/index.md","filePath":"front-end/ts/index.md","lastUpdated":1712240776000}'),p={name:"front-end/ts/index.md"},o=l(`<h1 id="typescript" tabindex="-1">typescript <a class="header-anchor" href="#typescript" aria-label="Permalink to &quot;typescript&quot;">​</a></h1><h2 id="启用-ts" tabindex="-1">启用 ts <a class="header-anchor" href="#启用-ts" aria-label="Permalink to &quot;启用 ts&quot;">​</a></h2><ul><li><p>webpack+babel</p></li><li><p>vite2</p></li><li><p>tsc typescript compiler 执行编译，会把 ts 编译成 js</p></li></ul><h2 id="类型-type-vs-类-class" tabindex="-1">类型 type vs 类 class <a class="header-anchor" href="#类型-type-vs-类-class" aria-label="Permalink to &quot;类型 type vs 类 class&quot;">​</a></h2><p>type js 基本类型 NaN、undefined、string、bool、number、symbol、bigint、object</p><p>类比如 Array、Object，都是 object，但需要更准确的区分</p><p>ts 类型兼容 js 的类型</p><h2 id="基本语法" tabindex="-1">基本语法 <a class="header-anchor" href="#基本语法" aria-label="Permalink to &quot;基本语法&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">undefined</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">undenfined</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">b</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">null</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">null</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">c</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Object</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {};</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">d</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Array</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [];</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 泛型</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">d</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Array</span><span style="color:#839496;">&lt;</span><span style="color:#859900;">string</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> [</span><span style="color:#2AA198;">&#39;1&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;2&#39;</span><span style="color:#839496;">, </span><span style="color:#D33682;">5</span><span style="color:#839496;">];</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 函数</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">add1</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> (a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">, b</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">)</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">b</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">add2</span><span style="color:#859900;">:</span><span style="color:#839496;"> (a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">, b</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> (a, b) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">b</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// interface 声明多个属性</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">interface</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">xxx</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  (a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">, b</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">)</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="ts-的类型" tabindex="-1">TS 的类型 <a class="header-anchor" href="#ts-的类型" aria-label="Permalink to &quot;TS 的类型&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">any</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;hi&#39;</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// a.name</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// unkown需要用断言</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// let b:unknown=JSON.parse(&#39;{name:&#39;jarrett&#39;}&#39;)</span></span>
<span class="line"><span style="color:#839496;">(</span><span style="color:#268BD2;">b</span><span style="color:#839496;"> </span><span style="color:#859900;">as</span><span style="color:#839496;"> { name</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> }).</span><span style="color:#268BD2;">name</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">print</span><span style="color:#859900;">:</span><span style="color:#839496;"> () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#859900;">void</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> () {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 空集，什么都没有</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">c</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">never</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">12</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 元组，固定长度的数组，ts特有，js可随意改变数组</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">x</span><span style="color:#859900;">:</span><span style="color:#839496;"> [</span><span style="color:#859900;">number</span><span style="color:#839496;">, </span><span style="color:#859900;">number</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> [</span><span style="color:#D33682;">100</span><span style="color:#839496;">, </span><span style="color:#D33682;">200</span><span style="color:#839496;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 枚举，一般不用，前端用 type=东|南|西|北 更香</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">enum</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Dir</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">东</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">南</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">西</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">北</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">d</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Dir</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Dir</span><span style="color:#839496;">.</span><span style="color:#268BD2;">东</span><span style="color:#839496;">; </span><span style="color:#586E75;font-style:italic;">//即Dir.东是0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="注意点" tabindex="-1">注意点 <a class="header-anchor" href="#注意点" aria-label="Permalink to &quot;注意点&quot;">​</a></h2><ul><li><p>typeof null 会返回 object，错误点</p></li><li><p>typeof funtion 会返回 function，但函数也是对象</p></li><li><p>class 包括 Array、Function，class 既是 value 也是 type</p></li></ul><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">A</span><span style="color:#839496;"> {}</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// A可以被当作值来赋值</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">B</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">A</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 左侧是类型，右侧是值</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">A</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">A</span><span style="color:#839496;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// A的类型是object;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="联合类型和交差类型" tabindex="-1">联合类型和交差类型 <a class="header-anchor" href="#联合类型和交差类型" aria-label="Permalink to &quot;联合类型和交差类型&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">A</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  name</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">f</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> (n</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">A</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {};</span></span>
<span class="line"><span style="color:#268BD2;">A</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;">.</span><span style="color:#268BD2;">toString</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 存在问题，不知道何时是什么类型</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 用typeof判断类型再调用api，比如string的toString()</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// ts可以在你写条件判断的时候自动推测、收窄类型</span></span>
<span class="line"><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#859900;">typeof</span><span style="color:#839496;"> </span><span style="color:#268BD2;">n</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;string&#39;</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">A</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;">.</span><span style="color:#268BD2;">toString</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">} </span><span style="color:#859900;">else</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">A</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">; </span><span style="color:#586E75;font-style:italic;">// never</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">A</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;">; </span><span style="color:#586E75;font-style:italic;">//报错</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 把两个复杂类型合并</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">B</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> { name</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> } </span><span style="color:#859900;">&amp;</span><span style="color:#839496;"> { age</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 声明div的类型</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">div1</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">HTMLDivElement</span><span style="color:#839496;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="泛型" tabindex="-1">泛型 <a class="header-anchor" href="#泛型" aria-label="Permalink to &quot;泛型&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">A</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;hi&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#D33682;">123</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">FNumber</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">F</span><span style="color:#839496;">&lt;</span><span style="color:#859900;">number</span><span style="color:#839496;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">add</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> (a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">, b</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">b</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Add</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> (a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;">, b</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;">) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// T可代表任何类型</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">addN</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Add</span><span style="color:#839496;">&lt;</span><span style="color:#859900;">number</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> (a, b) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">b</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">addS</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Add</span><span style="color:#839496;">&lt;</span><span style="color:#859900;">string</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> (a, b) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">b</span><span style="color:#839496;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// react的例子</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">P</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  name</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">App</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">FunctionComponent</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">P</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> props </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">props</span><span style="color:#839496;">.</span><span style="color:#268BD2;">name</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> &lt;</span><span style="color:#CB4B16;">div</span><span style="color:#839496;">&gt;&lt;/</span><span style="color:#CB4B16;">div</span><span style="color:#839496;">&gt;;</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 把泛型当作函数来理解</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 重载</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Add</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> (a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;">, b</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;">) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">add</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Add</span><span style="color:#839496;">&lt;</span><span style="color:#859900;">number</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> (a, b) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">b</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// type Add2 = (a: number, b: number) =&gt; number;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">add</span><span style="color:#839496;">(a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">, b</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">)</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">add</span><span style="color:#839496;">(a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">, b</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">)</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">add</span><span style="color:#839496;">(a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">any</span><span style="color:#839496;">, b</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">any</span><span style="color:#839496;">)</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">any</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#859900;">typeof</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;number&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> </span><span style="color:#859900;">typeof</span><span style="color:#839496;"> </span><span style="color:#268BD2;">b</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;number&#39;</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">b</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  } </span><span style="color:#859900;">else</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">b</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 封装网络请求</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">User</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  id</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  name</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">CreateResource</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> (path</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">create</span><span style="color:#859900;">:</span><span style="color:#839496;"> (attrs</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Omit</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">Partial</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">User</span><span style="color:#839496;">&gt;, </span><span style="color:#2AA198;">&#39;id&#39;</span><span style="color:#839496;">&gt;) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Promise</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">Response</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">User</span><span style="color:#839496;">&gt;&gt;;</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">createResource</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> (path</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">create</span><span style="color:#839496;">(attrs</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Omit</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">Partial</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">User</span><span style="color:#839496;">&gt;, </span><span style="color:#2AA198;">&#39;id&#39;</span><span style="color:#839496;">&gt;) {},</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">delete</span><span style="color:#839496;">() {},</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">update</span><span style="color:#839496;">() {},</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">get</span><span style="color:#839496;">() {}</span></span>
<span class="line"><span style="color:#839496;">  };</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">var</span><span style="color:#839496;"> </span><span style="color:#268BD2;">userResource</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">createFetcher</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;/api/v1/user&#39;</span><span style="color:#839496;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="面试题" tabindex="-1">面试题 <a class="header-anchor" href="#面试题" aria-label="Permalink to &quot;面试题&quot;">​</a></h2><ol><li>实现以下类型（尽量使用 util type）:</li></ol><ul><li>一类对象, 它的 value 值为 string 或者 number</li></ul><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 解答</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">union</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">interface</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Obj</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  [key</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">union</span><span style="color:#839496;">]</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">union</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 或者</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Obj1</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Record</span><span style="color:#839496;">&lt;</span><span style="color:#859900;">any</span><span style="color:#839496;">, </span><span style="color:#CB4B16;">union</span><span style="color:#839496;">&gt;;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>已知 interface T1, T2, 求类型 T3, 要求 T3 拥有 T1 和 T2 的所有属性, 对应 value 的类型也和 T1,T2 一样</li></ul><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 解答</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">interface</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T1</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  name</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">interface</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T2</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  age</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T3</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Omit</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T1</span><span style="color:#839496;">, </span><span style="color:#859900;">keyof</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T2</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">&amp;</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T2</span><span style="color:#839496;">; </span><span style="color:#586E75;font-style:italic;">// 如果直接使用交叉类型，会使同名属性为 nerver</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol><li>求 ItemWithoutType, 要求能正确反映函数 omitType 的返回类型（尽量使用 util type）</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">interface</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Item</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  type</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  value</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">any</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 解答</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">ItemWithoutType</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Omit</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">Item</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;type&#39;</span><span style="color:#839496;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">omitType</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Item</span><span style="color:#839496;">&gt;(obj</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;">)</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">ItemWithoutType</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">result</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> { </span><span style="color:#859900;">...</span><span style="color:#268BD2;">obj</span><span style="color:#839496;"> };</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">delete</span><span style="color:#839496;"> </span><span style="color:#268BD2;">result</span><span style="color:#839496;">.</span><span style="color:#268BD2;">type</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">result</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ol start="3"><li>已知函数 getAPlusB, 用 ts 限制它的入参, 使它总能符合我们的预期(返回数字)</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">interface</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">PlusObj</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  [key</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">]</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">any</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  b</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">getAPlusB</span><span style="color:#839496;">(obj</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">PlusObj</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">obj</span><span style="color:#839496;">.</span><span style="color:#268BD2;">a</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">obj</span><span style="color:#839496;">.</span><span style="color:#268BD2;">b</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="4"><li>考虑在工作中你碰到这样的场景: <code>IFoo</code> 来自于一个依赖库, 随着升级它可能会不断增加新的属性, 请实现 interface <code>IFooMapping</code>, 要求: 对于 <code>IFoo</code> 所有的 key, 都满足 <code>IFooMapping[key]</code> 的类型是返回为 <code>IFoo[key]</code> 的函数。 比如 <code>IFoo[&#39;a&#39;]</code> 为 <code>string</code>, 则 <code>IFooMapping[&#39;a&#39;]</code> 为返回类型为 <code>string</code> 的函数(如能使用泛型实现更好)</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">interface</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">IFoo</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  b</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 解答</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">IFooMapping</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  [</span><span style="color:#CB4B16;">K</span><span style="color:#839496;"> </span><span style="color:#859900;">in</span><span style="color:#839496;"> </span><span style="color:#859900;">keyof</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;">]</span><span style="color:#859900;">:</span><span style="color:#839496;"> () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;">[</span><span style="color:#CB4B16;">K</span><span style="color:#839496;">];</span></span>
<span class="line"><span style="color:#839496;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ol><li>请写出 event 的类型</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 答案</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Foo</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> (event</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">MouseEvent</span><span style="color:#839496;">) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#859900;">void</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">foo</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Foo</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> event </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#839496;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">window</span><span style="color:#839496;">.</span><span style="color:#268BD2;">addEventListener</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;click&#39;</span><span style="color:#839496;">, </span><span style="color:#268BD2;">foo</span><span style="color:#839496;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="2"><li>请实现这样的泛型: 当 T 的 type 属性类型为 string 时, 得到 <code>{ obj: T }</code> , 否则得到 <code>null</code></li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 答案</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">IFoo</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> </span><span style="color:#859900;">?</span><span style="color:#839496;"> { obj</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> } </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">null</span><span style="color:#839496;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * extends 继承关键字</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 复杂类型对象，子只需包含父的属性，即符合继承关系</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 文档上的例子说明https://www.typescriptlang.org/docs/handbook/2/generics.html#generic-constraints</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 简单类型，ts允许使用extends关键字对类型做判断，不是严格意义上的继承</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * String类允许被继承，继承的是一系列的String类的属性和方法</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 其他语言比如java，String类，被final修饰符修饰，是不可被继承和改变的</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Bar</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> { name</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> } </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">bar1</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Bar</span><span style="color:#839496;">&lt;{ name</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">; age</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> }&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;张三&#39;</span><span style="color:#839496;">; </span><span style="color:#586E75;font-style:italic;">// 包含父中的属性即合法</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">bar2</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Bar</span><span style="color:#839496;">&lt;{ age</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> }&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;张三&#39;</span><span style="color:#839496;">; </span><span style="color:#586E75;font-style:italic;">// 不能将类型“string”分配给类型“number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">IFoo</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> </span><span style="color:#859900;">?</span><span style="color:#839496;"> { obj</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> } </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">null</span><span style="color:#839496;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">foo1</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">IFoo</span><span style="color:#839496;">&lt;</span><span style="color:#859900;">string</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> { obj: </span><span style="color:#2AA198;">&#39;123&#39;</span><span style="color:#839496;"> }; </span><span style="color:#586E75;font-style:italic;">// ok</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">foo2</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">IFoo</span><span style="color:#839496;">&lt;</span><span style="color:#2AA198;">&#39;str&#39;</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> { obj: </span><span style="color:#2AA198;">&#39;123&#39;</span><span style="color:#839496;"> }; </span><span style="color:#586E75;font-style:italic;">// 不能将类型“&quot;123&quot;”分配给类型“&quot;str&quot;”</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// string 是类型，String是类</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">IFooStringObj</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">String</span><span style="color:#839496;"> </span><span style="color:#859900;">?</span><span style="color:#839496;"> { obj</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> } </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">null</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">foo3</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">IFooStringObj</span><span style="color:#839496;">&lt;</span><span style="color:#2AA198;">&#39;123&#39;</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> { obj: </span><span style="color:#2AA198;">&#39;123&#39;</span><span style="color:#839496;"> }; </span><span style="color:#586E75;font-style:italic;">// ok</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">foo4</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">IFooStringObj</span><span style="color:#839496;">&lt;</span><span style="color:#859900;">string</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> { obj: </span><span style="color:#2AA198;">&#39;123&#39;</span><span style="color:#839496;"> }; </span><span style="color:#586E75;font-style:italic;">// ok</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">interface</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">FakeString</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#6C71C4;">String</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">} </span><span style="color:#586E75;font-style:italic;">// 报错，缺少一系列String的方法</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">FakeString2</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">123</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> </span><span style="color:#586E75;font-style:italic;">// 报错，类型声明type中的extends关键字不是严格意义上的继承</span></span>
<span class="line"><span style="color:#CB4B16;">interface</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">N3</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> {} </span><span style="color:#586E75;font-style:italic;">// 报错&quot;string&quot;仅表示类型，但在此处却作为值使用</span></span>
<span class="line"><span style="color:#CB4B16;">interface</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">N4</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">String</span><span style="color:#839496;"> {} </span><span style="color:#586E75;font-style:italic;">// ok</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><ol start="3"><li>请用 jsdoc 在 js 中实现第一题, 建议把类型写在 .d.ts 文件中, 在 js 文件中 import 类型</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * </span><span style="color:#93A1A1;font-weight:bold;">@param</span><span style="color:#586E75;font-style:italic;"> </span><span style="color:#CB4B16;">{MouseEvent}</span><span style="color:#586E75;font-style:italic;"> </span><span style="color:#268BD2;font-style:italic;">event</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">foo</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> event </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">event</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,41),e=[o];function t(r,c,y,i,b,u){return a(),n("div",null,e)}const B=s(p,[["render",t]]);export{m as __pageData,B as default};
