import{o as a,c as n,a as s}from"./app.dff7797b.js";const t='{"title":"git","description":"","frontmatter":{"title":"git","desc":"《JavaScript设计模式》、《大话设计模式》笔记","keywords":"设计模式、笔记","date":"2020-02-17T01:01:00.000Z","cover":"https://cdn.jsdelivr.net/gh/chengpeiquan/assets-storage/img/2020/02/1.jpg"},"headers":[{"level":2,"title":"本地操作","slug":"本地操作"},{"level":2,"title":"远程仓库","slug":"远程仓库"},{"level":2,"title":"其他","slug":"其他"}],"relativePath":"front-end/git/index.md","lastUpdated":1658914366580}',e={},o=[s('<h1 id="git"><a class="header-anchor" href="#git" aria-hidden="true">#</a> git</h1><h2 id="本地操作"><a class="header-anchor" href="#本地操作" aria-hidden="true">#</a> 本地操作</h2><ol><li>配置</li></ol><div class="language-"><pre><code>git config --global user.name 你的英文名\ngit config --global user.email 你的邮箱\ngit config --global push.default simple\ngit config --global core.quotepath false\ngit config --global core.editor &quot;code --wait&quot;\ngit config --global core.autocrlf input\n</code></pre></div><ol start="2"><li>常用操作</li></ol><div class="language-javascript"><pre><code>git init <span class="token comment">//初始化git本地仓库</span>\ngit add xxx<span class="token punctuation">.</span>xxx  <span class="token comment">//指定将要提交的文件</span>\ngit add <span class="token punctuation">.</span>  <span class="token comment">//提交全部文件，可以创建一个.gitIgnore写入不想提交的文件和文件夹</span>\ngit commit <span class="token operator">-</span>m <span class="token string">&#39;提交理由&#39;</span>  <span class="token comment">// 没有空格不加引号也可，参数-v可以用vscode提交，可以顺便查看修改的具体代码</span>\ngit status <span class="token comment">//查看文件变动</span>\ngit log <span class="token comment">//查看历史提交，需要倒着看</span>\ngit reset <span class="token operator">--</span>hard 提交号前六位  <span class="token comment">//跳版本！！</span>\ngit reset <span class="token operator">--</span>hard <span class="token constant">HEAD</span><span class="token operator">^</span> <span class="token comment">//跳到上一个版本，HEAD^^跳到上上个版本</span>\ngit reflog <span class="token comment">//查看包括跳版本的所有历史记录</span>\ngit checkout <span class="token operator">--</span> xxx<span class="token punctuation">.</span>xxx <span class="token comment">//恢复到最近的一次commit或者git add的状态</span>\ngit cherry<span class="token operator">-</span>pick 提交号<span class="token number">1</span> 提交号<span class="token number">2</span> <span class="token operator">...</span> <span class="token comment">// 复制选中的提交号到当前分支</span>\n</code></pre></div><ol start="3"><li>分支操作</li></ol><div class="language-javascript"><pre><code>git branch x  <span class="token comment">//创建分支，是基于本地仓库的最新一次commit，创建一个新提交</span>\ngit checkout x  <span class="token comment">//切换分支</span>\ngit checkout <span class="token operator">-</span>b x <span class="token comment">//创建分支并切换</span>\ngit checkout master  <span class="token comment">//切换到主分支</span>\ngit branch <span class="token comment">//查看当前分支</span>\ngit merge x <span class="token comment">//合并分支，需要先到达主分支</span>\ngit branch <span class="token operator">-</span>d x  <span class="token comment">//删除分支</span>\n</code></pre></div><h2 id="远程仓库"><a class="header-anchor" href="#远程仓库" aria-hidden="true">#</a> 远程仓库</h2><ol><li>提交到 github <ol><li>创建 github 仓库，复制 ssh 地址</li><li>在本地添加远程仓库地址<code>git remote add orign git@xxx</code></li><li>推送本地 master 分支到远程 origin 的 master 分支<code>git push -u origin master</code>(提交过一次后，之后可以直接 git push , origin 是可以自己命名的)</li></ol></li><li>下载代码到本地 <code>git clone git@xxx</code></li></ol><h2 id="其他"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><div class="language-javascript"><pre><code>git rebase  <span class="token comment">// 合并提交历史</span>\ngit stash <span class="token comment">//代码写了一半不想提交，可以将add过的文件先暂存起来，得到一个干净的工作区</span>\ngit stash pop <span class="token comment">//显示暂存的文件</span>\n</code></pre></div>',12)];e.render=function(s,t,e,c,i,p){return a(),n("div",null,o)};export{t as __pageData,e as default};
